// <auto-generated />
using System;
using GoodsExchange.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoodsExchange.Data.Migrations
{
    [DbContext(typeof(GoodsExchangeDbContext))]
    [Migration("20240801092337_InitialDatabase")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GoodsExchange.Data.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            CategoryName = "School Supplies",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            CategoryName = "Stationery",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            CategoryName = "Textbooks",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            CategoryName = "Lab Equipment",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ExchangeRequest", b =>
                {
                    b.Property<Guid>("ExchangeRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrentProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReceiverStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SenderStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("StartTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TargetProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ExchangeRequestId");

                    b.HasIndex("CurrentProductId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.HasIndex("TargetProductId");

                    b.ToTable("ExchangeRequests");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserUploadId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserUploadId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("83e7590d-045c-4f30-b356-1e8d4e648bf0"),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "An in-depth textbook exploring the history and achievements of ancient civilizations from around the world.",
                            ProductName = "Premium Ink Refills",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5520),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        },
                        new
                        {
                            ProductId = new Guid("63eaf0f5-ebfc-480c-8730-1f0adfe9bb44"),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "An introductory textbook designed to help students understand the basic principles of physics.",
                            ProductName = "Coloring Pencil Pack",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5529),
                            UserUploadId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13")
                        },
                        new
                        {
                            ProductId = new Guid("8017d3e4-ae18-407d-886c-9457d23318e5"),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A precision measuring cylinder designed for accurate measurement of liquids in laboratory settings.",
                            ProductName = "Elegant Fountain Pen",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5532),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("4ac8b894-e496-41b6-b732-5d98055a9b15"),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A set of premium ink refills suitable for fountain pens, ensuring smooth and consistent writing.",
                            ProductName = "Glass Beaker Set",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5537),
                            UserUploadId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0")
                        },
                        new
                        {
                            ProductId = new Guid("0372d78b-88e0-4317-b659-3df3719b3fea"),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A high-quality microscope featuring LED illumination for clear and detailed observation of specimens.",
                            ProductName = "Glass Beaker Set",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5539),
                            UserUploadId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf")
                        },
                        new
                        {
                            ProductId = new Guid("65ea01bf-7222-4553-9374-ca0d78b5b445"),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A pack of colorful sticky notes for quick reminders, notes, and organizing your tasks.",
                            ProductName = "Laboratory Measuring Cylinder",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5543),
                            UserUploadId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a")
                        },
                        new
                        {
                            ProductId = new Guid("1e9081ec-56be-48eb-89ce-c840d3337f3e"),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A spiral-bound notebook with a durable cover, ideal for taking notes and journaling.",
                            ProductName = "Coloring Pencil Pack",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5545),
                            UserUploadId = new Guid("97108917-856a-42af-937b-7b0e2e735b20")
                        },
                        new
                        {
                            ProductId = new Guid("653ecca0-f579-424f-93ec-6c1994de91f1"),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A set of high-quality mechanical pencils with refillable lead, perfect for precise writing.",
                            ProductName = "Laboratory Measuring Cylinder",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5575),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("e36a849f-17ee-4f9c-9478-3f39efd3e39b"),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A pack of vibrant coloring pencils for creative drawing and coloring activities.",
                            ProductName = "Digital Thermometer",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5578),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        },
                        new
                        {
                            ProductId = new Guid("8e657720-4a86-4f51-a844-ac608e263156"),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "An in-depth textbook exploring the history and achievements of ancient civilizations from around the world.",
                            ProductName = "High-Quality Ruler Set",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5582),
                            UserUploadId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13")
                        },
                        new
                        {
                            ProductId = new Guid("442fb45a-97f6-4f58-9368-e03b606750c6"),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A set of durable rulers made from high-quality materials, perfect for accurate measurements and drawings.",
                            ProductName = "Student Backpack",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5584),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("e56b53f8-923d-4ade-88c7-07299bc3a8fe"),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A set of premium ink refills suitable for fountain pens, ensuring smooth and consistent writing.",
                            ProductName = "Digital Thermometer",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5588),
                            UserUploadId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0")
                        },
                        new
                        {
                            ProductId = new Guid("65cbb412-720c-4cf9-80e2-92901ab75196"),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "An in-depth textbook exploring the history and achievements of ancient civilizations from around the world.",
                            ProductName = "Assorted Sticky Notes",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5591),
                            UserUploadId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf")
                        },
                        new
                        {
                            ProductId = new Guid("7d8f3c19-2418-4f54-9105-c0b849304cc3"),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A comprehensive textbook covering fundamental algebraic concepts and problem-solving techniques.",
                            ProductName = "Coloring Pencil Pack",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5593),
                            UserUploadId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a")
                        },
                        new
                        {
                            ProductId = new Guid("228e52af-be2c-40bc-b8bb-3b39be03c532"),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A precision measuring cylinder designed for accurate measurement of liquids in laboratory settings.",
                            ProductName = "Student Backpack",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5605),
                            UserUploadId = new Guid("97108917-856a-42af-937b-7b0e2e735b20")
                        },
                        new
                        {
                            ProductId = new Guid("a981ad7f-6a1c-4234-843a-73513e7c3724"),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "An introductory textbook designed to help students understand the basic principles of physics.",
                            ProductName = "Assorted Sticky Notes",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5609),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("5b7cc0de-05ab-422c-9575-e4764c5fe692"),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A high-quality microscope featuring LED illumination for clear and detailed observation of specimens.",
                            ProductName = "Assorted Sticky Notes",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5612),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        },
                        new
                        {
                            ProductId = new Guid("ce6525fd-00ea-4374-9739-4696d06dec1b"),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A set of durable rulers made from high-quality materials, perfect for accurate measurements and drawings.",
                            ProductName = "Student Backpack",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5615),
                            UserUploadId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13")
                        },
                        new
                        {
                            ProductId = new Guid("aacaf3f1-7da9-45a0-8f57-bea892da86e0"),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A set of durable rulers made from high-quality materials, perfect for accurate measurements and drawings.",
                            ProductName = "Premium Ink Refills",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5618),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("6e3d0baa-0036-4f83-9908-b35497424618"),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A set of premium ink refills suitable for fountain pens, ensuring smooth and consistent writing.",
                            ProductName = "Elegant Fountain Pen",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5622),
                            UserUploadId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0")
                        },
                        new
                        {
                            ProductId = new Guid("782b0f8a-6fbf-4bce-9189-08e6aed996f1"),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A set of high-quality mechanical pencils with refillable lead, perfect for precise writing.",
                            ProductName = "High-Quality Ruler Set",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5624),
                            UserUploadId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf")
                        },
                        new
                        {
                            ProductId = new Guid("36536f7a-f473-4325-9ab5-e333d1e97df2"),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A set of durable glass beakers with clear measurement markings for laboratory use.",
                            ProductName = "Student Backpack",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5626),
                            UserUploadId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a")
                        },
                        new
                        {
                            ProductId = new Guid("051607ff-d719-4277-80b5-17703b79136f"),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A spacious and ergonomic backpack designed to carry all your school supplies comfortably.",
                            ProductName = "Spiral Notebook",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5628),
                            UserUploadId = new Guid("97108917-856a-42af-937b-7b0e2e735b20")
                        },
                        new
                        {
                            ProductId = new Guid("c7f846b1-9d04-4a16-8b53-a1564ebf6566"),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "An elegant fountain pen with a sleek design, ideal for professional writing and note-taking.",
                            ProductName = "Assorted Sticky Notes",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5633),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("56460b03-ca19-41a5-b605-955c1e5f240e"),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A set of high-quality mechanical pencils with refillable lead, perfect for precise writing.",
                            ProductName = "Digital Thermometer",
                            Status = 1,
                            UploadDate = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5635),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c73a8700-44db-4c3c-99ed-3628bd36756f"),
                            Caption = "Image for Premium Ink Refills",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5526),
                            FileSize = 1024L,
                            ImagePath = "https://png.pngtree.com/element_origin_min_pic/16/09/23/1857e50467c5629.jpg",
                            ProductId = new Guid("83e7590d-045c-4f30-b356-1e8d4e648bf0")
                        },
                        new
                        {
                            Id = new Guid("57dc262c-b787-4f14-9655-3b3abd40f0de"),
                            Caption = "Image for Coloring Pencil Pack",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5530),
                            FileSize = 2048L,
                            ImagePath = "https://img.lovepik.com/element/40145/4924.png_860.png",
                            ProductId = new Guid("63eaf0f5-ebfc-480c-8730-1f0adfe9bb44")
                        },
                        new
                        {
                            Id = new Guid("b87eb31c-2a91-4142-9220-4737406d83d4"),
                            Caption = "Image for Elegant Fountain Pen",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5533),
                            FileSize = 3072L,
                            ImagePath = "https://img.lovepik.com/element/40154/8917.png_300.png",
                            ProductId = new Guid("8017d3e4-ae18-407d-886c-9457d23318e5")
                        },
                        new
                        {
                            Id = new Guid("757d1b97-0c4d-4257-9953-960d92fa8459"),
                            Caption = "Image for Glass Beaker Set",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5538),
                            FileSize = 4096L,
                            ImagePath = "https://img.lovepik.com/element/40148/8397.png_300.png",
                            ProductId = new Guid("4ac8b894-e496-41b6-b732-5d98055a9b15")
                        },
                        new
                        {
                            Id = new Guid("19c07d7b-c497-4aeb-b025-18d7075cc769"),
                            Caption = "Image for Glass Beaker Set",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5541),
                            FileSize = 5120L,
                            ImagePath = "https://img.lovepik.com/original_origin_pic/18/08/09/ad4800dc49f64e450ae5f7d2c15bbd69.png_wh300.png",
                            ProductId = new Guid("0372d78b-88e0-4317-b659-3df3719b3fea")
                        },
                        new
                        {
                            Id = new Guid("a56a6ff3-5bf8-4925-b5b9-b4cafd253c2d"),
                            Caption = "Image for Laboratory Measuring Cylinder",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5544),
                            FileSize = 6144L,
                            ImagePath = "https://img.lovepik.com/png/20231021/School-office-supplies-binding-machine-stapler-book-stationery_289576_wh300.png",
                            ProductId = new Guid("65ea01bf-7222-4553-9374-ca0d78b5b445")
                        },
                        new
                        {
                            Id = new Guid("49005e74-3366-4551-9135-a081603ed130"),
                            Caption = "Image for Coloring Pencil Pack",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5546),
                            FileSize = 7168L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-cute.jpg",
                            ProductId = new Guid("1e9081ec-56be-48eb-89ce-c840d3337f3e")
                        },
                        new
                        {
                            Id = new Guid("ce60f39e-fb8e-43c3-b046-721b6e238a4f"),
                            Caption = "Image for Laboratory Measuring Cylinder",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5576),
                            FileSize = 8192L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-de-thuong.jpg",
                            ProductId = new Guid("653ecca0-f579-424f-93ec-6c1994de91f1")
                        },
                        new
                        {
                            Id = new Guid("da3b3d57-c3cc-4b9b-b205-37751c7399e1"),
                            Caption = "Image for Digital Thermometer",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5579),
                            FileSize = 9216L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQClbO9Pb9b1e1cm18mublklMG69UYXdPgGgbeNGPutxgObEWNt0gMTNXmOHZInEp8O1ro&usqp=CAU",
                            ProductId = new Guid("e36a849f-17ee-4f9c-9478-3f39efd3e39b")
                        },
                        new
                        {
                            Id = new Guid("b1be195f-437a-44e6-a2a6-337247248d78"),
                            Caption = "Image for High-Quality Ruler Set",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5583),
                            FileSize = 10240L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRxXUh1O9kqmHicXzEZYoksQl0zKVwNW3KRoI2N39oO3Yyw33D03xmltVXOqTtbTa3gAfU&usqp=CAU",
                            ProductId = new Guid("8e657720-4a86-4f51-a844-ac608e263156")
                        },
                        new
                        {
                            Id = new Guid("798b82d2-5749-4614-bbf4-87da2e0481fa"),
                            Caption = "Image for Student Backpack",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5585),
                            FileSize = 11264L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjY5xXwr880MJU4ZMkHoS4Kk9uBvJlVOocsyyr8c-SZIhpInnWpbdrTbxLSwIGRTqLtQE&usqp=CAU",
                            ProductId = new Guid("442fb45a-97f6-4f58-9368-e03b606750c6")
                        },
                        new
                        {
                            Id = new Guid("8775d6e7-070a-42da-90c2-ac9afa65a85a"),
                            Caption = "Image for Digital Thermometer",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5589),
                            FileSize = 12288L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRTzAg7kp7XyYhhU7MlQDH_Or2jTxIPZuyl3j_hA01ywVLBmo5qSkIeTbDE4C7DaKdDlyI&usqp=CAU",
                            ProductId = new Guid("e56b53f8-923d-4ade-88c7-07299bc3a8fe")
                        },
                        new
                        {
                            Id = new Guid("126944c3-2f21-4c27-a4d1-e114ceb1bc8e"),
                            Caption = "Image for Assorted Sticky Notes",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5592),
                            FileSize = 13312L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSo-afGGvOl-uAIciO_inSUbq8c2WrvHEA8zA&s",
                            ProductId = new Guid("65cbb412-720c-4cf9-80e2-92901ab75196")
                        },
                        new
                        {
                            Id = new Guid("42257822-861b-413a-ab7d-dabe00c5aaac"),
                            Caption = "Image for Coloring Pencil Pack",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5594),
                            FileSize = 14336L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNhUHteq_2myNyWXDG0-tdUmElcHC5ZufUbA&s",
                            ProductId = new Guid("7d8f3c19-2418-4f54-9105-c0b849304cc3")
                        },
                        new
                        {
                            Id = new Guid("b545095c-0421-4284-abc4-3b6e7ca6cab9"),
                            Caption = "Image for Student Backpack",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5606),
                            FileSize = 15360L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEabvTjiSCtzyqA2S0JmFbTYH53qBm-WjioQ&s",
                            ProductId = new Guid("228e52af-be2c-40bc-b8bb-3b39be03c532")
                        },
                        new
                        {
                            Id = new Guid("88e2e96a-9493-424b-b61e-0f539d329302"),
                            Caption = "Image for Assorted Sticky Notes",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5610),
                            FileSize = 16384L,
                            ImagePath = "https://png.pngtree.com/png-vector/20190130/ourlarge/pngtree-simple-and-cute-school-supplies-stationery-suppliesstationerystaplerpenpencil-casecorrection-fluidrubber-png-image_674963.jpg",
                            ProductId = new Guid("a981ad7f-6a1c-4234-843a-73513e7c3724")
                        },
                        new
                        {
                            Id = new Guid("1e58f226-f798-4682-99ee-a507c3abc88c"),
                            Caption = "Image for Assorted Sticky Notes",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5614),
                            FileSize = 17408L,
                            ImagePath = "https://png.pngtree.com/element_origin_min_pic/16/09/23/1857e50467c5629.jpg",
                            ProductId = new Guid("5b7cc0de-05ab-422c-9575-e4764c5fe692")
                        },
                        new
                        {
                            Id = new Guid("1fc8efdb-8139-419c-8e42-c11641e308e3"),
                            Caption = "Image for Student Backpack",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5616),
                            FileSize = 18432L,
                            ImagePath = "https://img.lovepik.com/element/40145/4924.png_860.png",
                            ProductId = new Guid("ce6525fd-00ea-4374-9739-4696d06dec1b")
                        },
                        new
                        {
                            Id = new Guid("5d8d968a-fa43-4400-bdd1-3a255628d735"),
                            Caption = "Image for Premium Ink Refills",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5618),
                            FileSize = 19456L,
                            ImagePath = "https://img.lovepik.com/element/40154/8917.png_300.png",
                            ProductId = new Guid("aacaf3f1-7da9-45a0-8f57-bea892da86e0")
                        },
                        new
                        {
                            Id = new Guid("80ae4146-a9e4-4711-831c-b7b9d042f01c"),
                            Caption = "Image for Elegant Fountain Pen",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5623),
                            FileSize = 20480L,
                            ImagePath = "https://img.lovepik.com/element/40148/8397.png_300.png",
                            ProductId = new Guid("6e3d0baa-0036-4f83-9908-b35497424618")
                        },
                        new
                        {
                            Id = new Guid("5c02982f-e409-4e45-8469-671e5e8d9af8"),
                            Caption = "Image for High-Quality Ruler Set",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5625),
                            FileSize = 21504L,
                            ImagePath = "https://img.lovepik.com/original_origin_pic/18/08/09/ad4800dc49f64e450ae5f7d2c15bbd69.png_wh300.png",
                            ProductId = new Guid("782b0f8a-6fbf-4bce-9189-08e6aed996f1")
                        },
                        new
                        {
                            Id = new Guid("6a31642b-7ce9-465c-82c1-0021f9954777"),
                            Caption = "Image for Student Backpack",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5627),
                            FileSize = 22528L,
                            ImagePath = "https://img.lovepik.com/png/20231021/School-office-supplies-binding-machine-stapler-book-stationery_289576_wh300.png",
                            ProductId = new Guid("36536f7a-f473-4325-9ab5-e333d1e97df2")
                        },
                        new
                        {
                            Id = new Guid("0fbd229c-dcaf-4337-820e-52149e8064fc"),
                            Caption = "Image for Spiral Notebook",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5630),
                            FileSize = 23552L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-cute.jpg",
                            ProductId = new Guid("051607ff-d719-4277-80b5-17703b79136f")
                        },
                        new
                        {
                            Id = new Guid("416dbb40-ac46-44ac-99cf-740d240fae79"),
                            Caption = "Image for Assorted Sticky Notes",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5634),
                            FileSize = 24576L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-de-thuong.jpg",
                            ProductId = new Guid("c7f846b1-9d04-4a16-8b53-a1564ebf6566")
                        },
                        new
                        {
                            Id = new Guid("1262a627-0f51-4fee-af04-0ab85522b9d1"),
                            Caption = "Image for Digital Thermometer",
                            DateCreated = new DateTime(2024, 8, 1, 9, 23, 37, 481, DateTimeKind.Utc).AddTicks(5636),
                            FileSize = 25600L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQClbO9Pb9b1e1cm18mublklMG69UYXdPgGgbeNGPutxgObEWNt0gMTNXmOHZInEp8O1ro&usqp=CAU",
                            ProductId = new Guid("56460b03-ca19-41a5-b605-955c1e5f240e")
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Rating", b =>
                {
                    b.Property<Guid>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NumberStars")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RatingId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Report", b =>
                {
                    b.Property<Guid>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("e398cee3-6381-4a52-aaf5-20a2e9b54810"),
                            RoleName = "Administrator"
                        },
                        new
                        {
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            RoleName = "Moderator"
                        },
                        new
                        {
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Transaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("ExchangeRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TransactionId");

                    b.HasIndex("ExchangeRequestId")
                        .IsUnique();

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("EmailConfirm")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("0af02748-9d43-4110-81e5-93d9ece8cfda"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "minhkhoa@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Minh",
                            IsActive = false,
                            LastName = "Khoa",
                            Password = "$2a$11$56uLC.cQNb2IGVUfdicrt.iwe0Ywg6q7E//CQWDFZQfwsrUOYYzKm",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("e398cee3-6381-4a52-aaf5-20a2e9b54810"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "admin"
                        },
                        new
                        {
                            UserId = new Guid("b6b6e80f-cc04-43e3-800f-a3c89b3ba017"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phamthanh@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Pham",
                            IsActive = false,
                            LastName = "Thanh",
                            Password = "$2a$11$miEaizgcJOu2DP.PzI2VNe1tbWdIRMINOM6uV/hpxC5tndx18Mc9m",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "moderator"
                        },
                        new
                        {
                            UserId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phuongthao@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Phuong",
                            IsActive = false,
                            LastName = "Thao",
                            Password = "$2a$11$2FFHny/MEK/U.6cqbaKoPOIpyi0zFi/KU3un65cYyXkDcJ.VYXcgy",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "phuongthao"
                        },
                        new
                        {
                            UserId = new Guid("fda6e282-e429-4364-a445-136b570e2fde"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quoctrieu@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Quoc",
                            IsActive = false,
                            LastName = "Trieu",
                            Password = "$2a$11$LiuauohHd1ybsse8yA.i/ec1cUhp1s0AHkvZgW2/Td2dK2j6g84Ga",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "quoctrieu"
                        },
                        new
                        {
                            UserId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "haugiang@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Hau",
                            IsActive = false,
                            LastName = "Giang",
                            Password = "$2a$11$KyhGum1m5JYn9o9O7ImqYuikQ8l9EOAkztUqahNP/lPR5F8fl.wAS",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "haugiang"
                        },
                        new
                        {
                            UserId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "minhphuoc@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Minh",
                            IsActive = false,
                            LastName = "Phuoc",
                            Password = "$2a$11$IdeeF7oARJyKC2NFLDzkWOty0kvgeLDUJxW9Hr38jwXO2pqV0UY/W",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "minhphuoc"
                        },
                        new
                        {
                            UserId = new Guid("8130b91b-2e32-4aad-8479-3e01dd8813e3"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "haugiang01@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Hậu",
                            IsActive = false,
                            LastName = "Giang",
                            Password = "$2a$11$Xd006IQLTQKERKIf2C9EoelUYecx1fg57TRmAjdSS4fihvzH35DNa",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "haugiang45"
                        },
                        new
                        {
                            UserId = new Guid("273c8fa3-b3f4-4c6d-87da-07bc63a4c436"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1995, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "minhtran@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Minh",
                            IsActive = false,
                            LastName = "Trần",
                            Password = "$2a$11$G8KaqgbxV5cTtMe6GRWNW.Fp60rECE0pPDMBY0EaMRtyz/Ds9ZqXy",
                            PhoneNumber = "0987654321",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "minhtran"
                        },
                        new
                        {
                            UserId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2000, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thaonguyen@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Thảo",
                            IsActive = false,
                            LastName = "Nguyễn",
                            Password = "$2a$11$l61RnPLgmQbQYOvA9.hV6O6KNqNS4ylq8cO1dWVKmZ8nMYT6/vDTu",
                            PhoneNumber = "0912345678",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "thaonguyen"
                        },
                        new
                        {
                            UserId = new Guid("15b2d60f-bdfc-4ce1-8b03-f8b8c3d7480d"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1998, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anhpham@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Anh",
                            IsActive = false,
                            LastName = "Phạm",
                            Password = "$2a$11$X/NiU3x0pPSFQ8kOfhFuYOJ3335zFl7DSO5YUEhZDsZ5S6ARVmf3q",
                            PhoneNumber = "0908765432",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "anhpham"
                        },
                        new
                        {
                            UserId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1996, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "namle@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Nam",
                            IsActive = false,
                            LastName = "Lê",
                            Password = "$2a$11$iQAAG2VgBj9NIuezPOe.F.NlFDxUXWsgYCCwp7LOqzdmxMRFkPUb.",
                            PhoneNumber = "0901234567",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "namle"
                        },
                        new
                        {
                            UserId = new Guid("ce914c08-8b01-483a-8b16-1c0e27284cc8"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1999, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lanhoang@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Lan",
                            IsActive = false,
                            LastName = "Hoàng",
                            Password = "$2a$11$wpB2SGAOnu6LsTAGBfdjG.Ayduj7kSXGAw/6VTPn8BD2YP9dJvhUG",
                            PhoneNumber = "0934567890",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "lanhoang"
                        },
                        new
                        {
                            UserId = new Guid("bf0b0b85-e98e-4da7-af44-b7198685cb78"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tudo@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Tú",
                            IsActive = false,
                            LastName = "Đỗ",
                            Password = "$2a$11$2hgXAMbh5JQn8NsyP/5.BeA5iXNb0uhMHHE77mT0Pc9mT./gG73GS",
                            PhoneNumber = "0981234567",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "tudo"
                        },
                        new
                        {
                            UserId = new Guid("fefd096b-eb6f-4843-a9fb-fdde2f08e960"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2001, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quynhphan@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Quỳnh",
                            IsActive = false,
                            LastName = "Phan",
                            Password = "$2a$11$8brpM3HD2Ok/ZHazm6nm4edXC0HbvIGj5uQCQfpOLYSS8bxffZP.a",
                            PhoneNumber = "0908761234",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "quynhphan"
                        },
                        new
                        {
                            UserId = new Guid("97108917-856a-42af-937b-7b0e2e735b20"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1997, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "huongtrinh@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Hương",
                            IsActive = false,
                            LastName = "Trịnh",
                            Password = "$2a$11$ogoMuWMXypDiP.8uk4YupeWzumTCLt1uweIEGbNOfH4GdQ06xVRFe",
                            PhoneNumber = "0937894561",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "huongtrinh"
                        },
                        new
                        {
                            UserId = new Guid("0da4bfc5-3a37-4a66-91d5-fe9e1d086564"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khangvo@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Khang",
                            IsActive = false,
                            LastName = "Võ",
                            Password = "$2a$11$jFXTloKHsOCBl9.shfOZ6.Iv9d81FvIuWqk3cNQT0qvq2uyUvUiAm",
                            PhoneNumber = "0923456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "khangvo"
                        },
                        new
                        {
                            UserId = new Guid("f58236aa-5912-489a-8ffb-001d61e611c8"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nguyenvana@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Nguyen",
                            IsActive = false,
                            LastName = "Van A",
                            Password = "$2a$11$uk.4NZ4L1WNc/8RDFJdr3epAZ3ifz9rwRnnFJ0eQ6HSUpYWdNa8ni",
                            PhoneNumber = "0902345678",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "nguyenvana"
                        },
                        new
                        {
                            UserId = new Guid("803b1549-478c-421b-bd4b-2b6111836609"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2001, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lethib@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Le",
                            IsActive = false,
                            LastName = "Thi B",
                            Password = "$2a$11$EH7kPU2FMPc/cOAcadAl/e5rbHq5LdgnBZY4LXpz6fxb8hxbH5tWS",
                            PhoneNumber = "0903456789",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "lethib"
                        },
                        new
                        {
                            UserId = new Guid("7c87c075-2c90-4c6e-8e8b-b903ec331072"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2000, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tranvanc@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Tran",
                            IsActive = false,
                            LastName = "Van C",
                            Password = "$2a$11$9NCm9tgKpfOAHO.Lte/IEOXcu8LlnMjuzLnqCgGzP95jKalzhAyqq",
                            PhoneNumber = "0904567890",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "tranvanc"
                        },
                        new
                        {
                            UserId = new Guid("f370712b-0452-479c-a0d4-b4d2a7ace38f"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phamthid@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Pham",
                            IsActive = false,
                            LastName = "Thi D",
                            Password = "$2a$11$dicFqpYdxm4JrvoiUh4NS.C3m9fq7GCh4gqwqOwrap18yTONtpgzm",
                            PhoneNumber = "0905678901",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "phamthid"
                        },
                        new
                        {
                            UserId = new Guid("a6f939d3-eb8a-4884-8084-b1dc99559167"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dovane@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Do",
                            IsActive = false,
                            LastName = "Van E",
                            Password = "$2a$11$/K73b4mGd0cyYo/1jRtVtuI879KM6kKf5dcJLY/PXwKeNoZczBRca",
                            PhoneNumber = "0906789012",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "dovane"
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ExchangeRequest", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "CurrentProduct")
                        .WithMany("ExchangeRequestsSent")
                        .HasForeignKey("CurrentProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Receiver")
                        .WithMany("PreOrderToSellers")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Sender")
                        .WithMany("PreOrderToBuyers")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.Product", "TargetProduct")
                        .WithMany("ExchangeRequestsReceived")
                        .HasForeignKey("TargetProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CurrentProduct");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");

                    b.Navigation("TargetProduct");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Product", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "UserUpload")
                        .WithMany("Products")
                        .HasForeignKey("UserUploadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("UserUpload");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ProductImage", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Rating", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "Product")
                        .WithOne("Rate")
                        .HasForeignKey("GoodsExchange.Data.Models.Rating", "ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Receiver")
                        .WithMany("RatingsReceived")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Sender")
                        .WithMany("RatingsGiven")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Report", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "Product")
                        .WithMany("Reports")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Receiver")
                        .WithMany("ReportsReceived")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Sender")
                        .WithMany("ReportsMade")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Transaction", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.ExchangeRequest", "ExchangeRequest")
                        .WithOne("Transaction")
                        .HasForeignKey("GoodsExchange.Data.Models.Transaction", "ExchangeRequestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ExchangeRequest");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.User", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ExchangeRequest", b =>
                {
                    b.Navigation("Transaction")
                        .IsRequired();
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Product", b =>
                {
                    b.Navigation("ExchangeRequestsReceived");

                    b.Navigation("ExchangeRequestsSent");

                    b.Navigation("ProductImages");

                    b.Navigation("Rate")
                        .IsRequired();

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.User", b =>
                {
                    b.Navigation("PreOrderToBuyers");

                    b.Navigation("PreOrderToSellers");

                    b.Navigation("Products");

                    b.Navigation("RatingsGiven");

                    b.Navigation("RatingsReceived");

                    b.Navigation("ReportsMade");

                    b.Navigation("ReportsReceived");
                });
#pragma warning restore 612, 618
        }
    }
}
