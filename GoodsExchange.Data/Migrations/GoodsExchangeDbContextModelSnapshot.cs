// <auto-generated />
using System;
using GoodsExchange.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoodsExchange.Data.Migrations
{
    [DbContext(typeof(GoodsExchangeDbContext))]
    partial class GoodsExchangeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GoodsExchange.Data.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            CategoryName = "School Supplies",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            CategoryName = "Stationery",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            CategoryName = "Textbooks",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            CategoryName = "Lab Equipment",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ExchangeRequest", b =>
                {
                    b.Property<Guid>("ExchangeRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrentProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReceiverStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SenderStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TargetProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ExchangeRequestId");

                    b.HasIndex("CurrentProductId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.HasIndex("TargetProductId");

                    b.ToTable("ExchangeRequests");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsReviewed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserUploadId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserUploadId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("00479fec-e30e-453a-836f-ec877d23bf4e"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2269),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A detailed textbook offering a thorough overview of biological principles and scientific explorations.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Glass Beaker Set",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2267),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        },
                        new
                        {
                            ProductId = new Guid("a907875a-7554-49f1-b590-b783da33863b"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2276),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A pack of vibrant coloring pencils for creative drawing and coloring activities.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Elegant Fountain Pen",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2275),
                            UserUploadId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13")
                        },
                        new
                        {
                            ProductId = new Guid("0edeabad-da88-41d7-a389-a8a4d7d4077b"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2290),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A pack of vibrant coloring pencils for creative drawing and coloring activities.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Laboratory Measuring Cylinder",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2290),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("be08180c-8524-45c9-9fd5-181b8b48e748"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2292),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A spiral-bound notebook with a durable cover, ideal for taking notes and journaling.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Assorted Sticky Notes",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2292),
                            UserUploadId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0")
                        },
                        new
                        {
                            ProductId = new Guid("75cead64-21e6-4dd2-bf47-da7ed35059e5"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2295),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A set of durable glass beakers with clear measurement markings for laboratory use.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Microscope with LED Illumination",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2294),
                            UserUploadId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf")
                        },
                        new
                        {
                            ProductId = new Guid("c0a2f7e8-9951-4209-b78b-4bd953ae6011"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2298),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A set of premium ink refills suitable for fountain pens, ensuring smooth and consistent writing.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Assorted Sticky Notes",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2297),
                            UserUploadId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a")
                        },
                        new
                        {
                            ProductId = new Guid("c9b7cb12-f279-4cb6-8a7d-a78909f43cc3"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2301),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A set of durable rulers made from high-quality materials, perfect for accurate measurements and drawings.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Coloring Pencil Pack",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2301),
                            UserUploadId = new Guid("97108917-856a-42af-937b-7b0e2e735b20")
                        },
                        new
                        {
                            ProductId = new Guid("aa38a577-73da-484b-b626-edca5f36b2cc"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2327),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A digital thermometer with high precision for measuring temperatures in scientific experiments.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Elegant Fountain Pen",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2327),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("bd51251d-6e29-4b1f-b28f-94b592291199"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2330),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "An elegant fountain pen with a sleek design, ideal for professional writing and note-taking.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Introduction to Algebra",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2330),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        },
                        new
                        {
                            ProductId = new Guid("9ba40ccc-5cd2-4c1e-8191-20ed822a1401"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2333),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A set of durable rulers made from high-quality materials, perfect for accurate measurements and drawings.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Mechanical Pencil Set",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2332),
                            UserUploadId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13")
                        },
                        new
                        {
                            ProductId = new Guid("5e1282df-8a00-4b9c-8e3b-7b6bc0417acf"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2337),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A spacious and ergonomic backpack designed to carry all your school supplies comfortably.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Microscope with LED Illumination",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2336),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("9a941f95-f24b-4096-a372-6edc0c3b8897"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2339),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A set of high-quality mechanical pencils with refillable lead, perfect for precise writing.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "History of Ancient Civilizations",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2339),
                            UserUploadId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0")
                        },
                        new
                        {
                            ProductId = new Guid("e56f14bf-40fa-408e-a7d5-3e1f100009c3"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2342),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A set of durable rulers made from high-quality materials, perfect for accurate measurements and drawings.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Biology: Principles and Explorations",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2341),
                            UserUploadId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf")
                        },
                        new
                        {
                            ProductId = new Guid("335269eb-4cf0-458e-8878-b02aae00baf1"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2344),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A spacious and ergonomic backpack designed to carry all your school supplies comfortably.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Glass Beaker Set",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2344),
                            UserUploadId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a")
                        },
                        new
                        {
                            ProductId = new Guid("3de7dc87-8c58-411d-afb9-36719c7f0b1e"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2359),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A set of durable rulers made from high-quality materials, perfect for accurate measurements and drawings.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Biology: Principles and Explorations",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2359),
                            UserUploadId = new Guid("97108917-856a-42af-937b-7b0e2e735b20")
                        },
                        new
                        {
                            ProductId = new Guid("f67a9513-5423-4a6d-b9b6-bcc6643922d9"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2361),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A spacious and ergonomic backpack designed to carry all your school supplies comfortably.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Digital Thermometer",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2361),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("064b9695-9999-49e4-a8d0-cc876a1cc335"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2363),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A pack of vibrant coloring pencils for creative drawing and coloring activities.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Premium Ink Refills",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2363),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        },
                        new
                        {
                            ProductId = new Guid("b65c4876-1aaf-4acb-b614-5b609c6c95aa"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2366),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A precision measuring cylinder designed for accurate measurement of liquids in laboratory settings.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "History of Ancient Civilizations",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2366),
                            UserUploadId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13")
                        },
                        new
                        {
                            ProductId = new Guid("857b5383-d80e-4a33-af84-4ee7cc0b1fc8"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2370),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A detailed textbook offering a thorough overview of biological principles and scientific explorations.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Introduction to Algebra",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2370),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("bf64b289-fb7a-4e95-80be-2ccd40b26ea9"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2372),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "An introductory textbook designed to help students understand the basic principles of physics.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Microscope with LED Illumination",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2372),
                            UserUploadId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0")
                        },
                        new
                        {
                            ProductId = new Guid("dd4854bf-8cca-44b7-965c-49628dc77802"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2374),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A digital thermometer with high precision for measuring temperatures in scientific experiments.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Laboratory Measuring Cylinder",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2374),
                            UserUploadId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf")
                        },
                        new
                        {
                            ProductId = new Guid("894f5213-c713-4191-910c-49d4a00a318b"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2376),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "An introductory textbook designed to help students understand the basic principles of physics.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Coloring Pencil Pack",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2376),
                            UserUploadId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a")
                        },
                        new
                        {
                            ProductId = new Guid("d615c5be-e4d2-4270-81ec-2f6625052a39"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2380),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A set of durable glass beakers with clear measurement markings for laboratory use.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "History of Ancient Civilizations",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2380),
                            UserUploadId = new Guid("97108917-856a-42af-937b-7b0e2e735b20")
                        },
                        new
                        {
                            ProductId = new Guid("1f92d067-3bb9-4e08-89ad-eef74892f7c7"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2382),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A set of premium ink refills suitable for fountain pens, ensuring smooth and consistent writing.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Coloring Pencil Pack",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2382),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("163a78bd-ea25-4630-af77-10145b7a894d"),
                            ApprovedDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2384),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A spiral-bound notebook with a durable cover, ideal for taking notes and journaling.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "History of Ancient Civilizations",
                            UploadDate = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2384),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba7b7ae7-7652-444f-a1d5-338a85f6e37c"),
                            Caption = "Image for Glass Beaker Set",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2274),
                            FileSize = 1024L,
                            ImagePath = "https://png.pngtree.com/element_origin_min_pic/16/09/23/1857e50467c5629.jpg",
                            ProductId = new Guid("00479fec-e30e-453a-836f-ec877d23bf4e")
                        },
                        new
                        {
                            Id = new Guid("fb52b7a7-7128-4ea8-a08e-ae2b87490393"),
                            Caption = "Image for Elegant Fountain Pen",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2277),
                            FileSize = 2048L,
                            ImagePath = "https://img.lovepik.com/element/40145/4924.png_860.png",
                            ProductId = new Guid("a907875a-7554-49f1-b590-b783da33863b")
                        },
                        new
                        {
                            Id = new Guid("281eb479-cdb2-4ee7-a25c-48a56b29d629"),
                            Caption = "Image for Laboratory Measuring Cylinder",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2291),
                            FileSize = 3072L,
                            ImagePath = "https://img.lovepik.com/element/40154/8917.png_300.png",
                            ProductId = new Guid("0edeabad-da88-41d7-a389-a8a4d7d4077b")
                        },
                        new
                        {
                            Id = new Guid("4c7ed437-b15b-4578-a2d3-47e43cddaa03"),
                            Caption = "Image for Assorted Sticky Notes",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2293),
                            FileSize = 4096L,
                            ImagePath = "https://img.lovepik.com/element/40148/8397.png_300.png",
                            ProductId = new Guid("be08180c-8524-45c9-9fd5-181b8b48e748")
                        },
                        new
                        {
                            Id = new Guid("4ac90e15-1402-4fdd-b5f0-6eb144914ce3"),
                            Caption = "Image for Microscope with LED Illumination",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2296),
                            FileSize = 5120L,
                            ImagePath = "https://img.lovepik.com/original_origin_pic/18/08/09/ad4800dc49f64e450ae5f7d2c15bbd69.png_wh300.png",
                            ProductId = new Guid("75cead64-21e6-4dd2-bf47-da7ed35059e5")
                        },
                        new
                        {
                            Id = new Guid("a7a165ff-93e2-4309-9d12-36391c317a5b"),
                            Caption = "Image for Assorted Sticky Notes",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2298),
                            FileSize = 6144L,
                            ImagePath = "https://img.lovepik.com/png/20231021/School-office-supplies-binding-machine-stapler-book-stationery_289576_wh300.png",
                            ProductId = new Guid("c0a2f7e8-9951-4209-b78b-4bd953ae6011")
                        },
                        new
                        {
                            Id = new Guid("afdffca0-a42f-4276-92dc-d1199a16f939"),
                            Caption = "Image for Coloring Pencil Pack",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2326),
                            FileSize = 7168L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-cute.jpg",
                            ProductId = new Guid("c9b7cb12-f279-4cb6-8a7d-a78909f43cc3")
                        },
                        new
                        {
                            Id = new Guid("b2318a19-4d97-4c13-8c8a-c95258812ece"),
                            Caption = "Image for Elegant Fountain Pen",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2328),
                            FileSize = 8192L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-de-thuong.jpg",
                            ProductId = new Guid("aa38a577-73da-484b-b626-edca5f36b2cc")
                        },
                        new
                        {
                            Id = new Guid("e431a2ec-8866-4606-bcc3-1eea341bf52d"),
                            Caption = "Image for Introduction to Algebra",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2331),
                            FileSize = 9216L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQClbO9Pb9b1e1cm18mublklMG69UYXdPgGgbeNGPutxgObEWNt0gMTNXmOHZInEp8O1ro&usqp=CAU",
                            ProductId = new Guid("bd51251d-6e29-4b1f-b28f-94b592291199")
                        },
                        new
                        {
                            Id = new Guid("e57faf24-dc62-409a-9200-1ad4c2970a0c"),
                            Caption = "Image for Mechanical Pencil Set",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2334),
                            FileSize = 10240L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRxXUh1O9kqmHicXzEZYoksQl0zKVwNW3KRoI2N39oO3Yyw33D03xmltVXOqTtbTa3gAfU&usqp=CAU",
                            ProductId = new Guid("9ba40ccc-5cd2-4c1e-8191-20ed822a1401")
                        },
                        new
                        {
                            Id = new Guid("4ddbe1ab-6396-4cf9-9e08-ea01d476908b"),
                            Caption = "Image for Microscope with LED Illumination",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2337),
                            FileSize = 11264L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjY5xXwr880MJU4ZMkHoS4Kk9uBvJlVOocsyyr8c-SZIhpInnWpbdrTbxLSwIGRTqLtQE&usqp=CAU",
                            ProductId = new Guid("5e1282df-8a00-4b9c-8e3b-7b6bc0417acf")
                        },
                        new
                        {
                            Id = new Guid("75989c98-7816-4e6a-9fe6-4c0aca2bf2d6"),
                            Caption = "Image for History of Ancient Civilizations",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2340),
                            FileSize = 12288L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRTzAg7kp7XyYhhU7MlQDH_Or2jTxIPZuyl3j_hA01ywVLBmo5qSkIeTbDE4C7DaKdDlyI&usqp=CAU",
                            ProductId = new Guid("9a941f95-f24b-4096-a372-6edc0c3b8897")
                        },
                        new
                        {
                            Id = new Guid("0c3be178-3c69-46ab-901e-2ae4a62f6674"),
                            Caption = "Image for Biology: Principles and Explorations",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2343),
                            FileSize = 13312L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSo-afGGvOl-uAIciO_inSUbq8c2WrvHEA8zA&s",
                            ProductId = new Guid("e56f14bf-40fa-408e-a7d5-3e1f100009c3")
                        },
                        new
                        {
                            Id = new Guid("a6d05f33-7a03-4a39-bd78-ea0e162110cf"),
                            Caption = "Image for Glass Beaker Set",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2345),
                            FileSize = 14336L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNhUHteq_2myNyWXDG0-tdUmElcHC5ZufUbA&s",
                            ProductId = new Guid("335269eb-4cf0-458e-8878-b02aae00baf1")
                        },
                        new
                        {
                            Id = new Guid("4f6594bf-1120-499e-9643-870084473281"),
                            Caption = "Image for Biology: Principles and Explorations",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2360),
                            FileSize = 15360L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEabvTjiSCtzyqA2S0JmFbTYH53qBm-WjioQ&s",
                            ProductId = new Guid("3de7dc87-8c58-411d-afb9-36719c7f0b1e")
                        },
                        new
                        {
                            Id = new Guid("ad601b38-3e03-482d-a359-a4cb26f45b6f"),
                            Caption = "Image for Digital Thermometer",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2362),
                            FileSize = 16384L,
                            ImagePath = "https://png.pngtree.com/png-vector/20190130/ourlarge/pngtree-simple-and-cute-school-supplies-stationery-suppliesstationerystaplerpenpencil-casecorrection-fluidrubber-png-image_674963.jpg",
                            ProductId = new Guid("f67a9513-5423-4a6d-b9b6-bcc6643922d9")
                        },
                        new
                        {
                            Id = new Guid("8e58d199-507e-4a7d-8589-f632bcd0eb70"),
                            Caption = "Image for Premium Ink Refills",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2364),
                            FileSize = 17408L,
                            ImagePath = "https://png.pngtree.com/element_origin_min_pic/16/09/23/1857e50467c5629.jpg",
                            ProductId = new Guid("064b9695-9999-49e4-a8d0-cc876a1cc335")
                        },
                        new
                        {
                            Id = new Guid("528e692a-aeb2-45dc-9718-4dfc58db45dd"),
                            Caption = "Image for History of Ancient Civilizations",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2367),
                            FileSize = 18432L,
                            ImagePath = "https://img.lovepik.com/element/40145/4924.png_860.png",
                            ProductId = new Guid("b65c4876-1aaf-4acb-b614-5b609c6c95aa")
                        },
                        new
                        {
                            Id = new Guid("91481638-3df4-4aca-8cbf-1efc9be51116"),
                            Caption = "Image for Introduction to Algebra",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2371),
                            FileSize = 19456L,
                            ImagePath = "https://img.lovepik.com/element/40154/8917.png_300.png",
                            ProductId = new Guid("857b5383-d80e-4a33-af84-4ee7cc0b1fc8")
                        },
                        new
                        {
                            Id = new Guid("4bf18a1a-50c9-47d2-9905-5491b6c58f76"),
                            Caption = "Image for Microscope with LED Illumination",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2373),
                            FileSize = 20480L,
                            ImagePath = "https://img.lovepik.com/element/40148/8397.png_300.png",
                            ProductId = new Guid("bf64b289-fb7a-4e95-80be-2ccd40b26ea9")
                        },
                        new
                        {
                            Id = new Guid("6639913f-f309-44db-80dc-28b67efdb05b"),
                            Caption = "Image for Laboratory Measuring Cylinder",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2375),
                            FileSize = 21504L,
                            ImagePath = "https://img.lovepik.com/original_origin_pic/18/08/09/ad4800dc49f64e450ae5f7d2c15bbd69.png_wh300.png",
                            ProductId = new Guid("dd4854bf-8cca-44b7-965c-49628dc77802")
                        },
                        new
                        {
                            Id = new Guid("920f6f19-fa58-475e-8f8b-2a679490d1e3"),
                            Caption = "Image for Coloring Pencil Pack",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2377),
                            FileSize = 22528L,
                            ImagePath = "https://img.lovepik.com/png/20231021/School-office-supplies-binding-machine-stapler-book-stationery_289576_wh300.png",
                            ProductId = new Guid("894f5213-c713-4191-910c-49d4a00a318b")
                        },
                        new
                        {
                            Id = new Guid("61508c5c-e2f6-4528-8398-d3626fbb8aeb"),
                            Caption = "Image for History of Ancient Civilizations",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2381),
                            FileSize = 23552L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-cute.jpg",
                            ProductId = new Guid("d615c5be-e4d2-4270-81ec-2f6625052a39")
                        },
                        new
                        {
                            Id = new Guid("61517681-1fe8-4e63-80a8-87bc77fc2d64"),
                            Caption = "Image for Coloring Pencil Pack",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2383),
                            FileSize = 24576L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-de-thuong.jpg",
                            ProductId = new Guid("1f92d067-3bb9-4e08-89ad-eef74892f7c7")
                        },
                        new
                        {
                            Id = new Guid("b51cb85b-789b-45a6-920e-d9b0bb8fd9b3"),
                            Caption = "Image for History of Ancient Civilizations",
                            DateCreated = new DateTime(2024, 7, 27, 5, 46, 48, 353, DateTimeKind.Utc).AddTicks(2385),
                            FileSize = 25600L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQClbO9Pb9b1e1cm18mublklMG69UYXdPgGgbeNGPutxgObEWNt0gMTNXmOHZInEp8O1ro&usqp=CAU",
                            ProductId = new Guid("163a78bd-ea25-4630-af77-10145b7a894d")
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Rating", b =>
                {
                    b.Property<Guid>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NumberStars")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RatingId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Report", b =>
                {
                    b.Property<Guid>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReportId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("e398cee3-6381-4a52-aaf5-20a2e9b54810"),
                            RoleName = "Administrator"
                        },
                        new
                        {
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            RoleName = "Moderator"
                        },
                        new
                        {
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Transaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExchangeRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TransactionId");

                    b.HasIndex("ExchangeRequestId")
                        .IsUnique();

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("EmailConfirm")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("0af02748-9d43-4110-81e5-93d9ece8cfda"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "minhkhoa@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Minh",
                            IsActive = false,
                            LastName = "Khoa",
                            Password = "$2a$11$RAn3nJBQCn9JSDrBkXDh7uVDKP0NI3itK2NKzbgyDjUqFcDdYZiAC",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("e398cee3-6381-4a52-aaf5-20a2e9b54810"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "admin"
                        },
                        new
                        {
                            UserId = new Guid("b6b6e80f-cc04-43e3-800f-a3c89b3ba017"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phamthanh@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Pham",
                            IsActive = false,
                            LastName = "Thanh",
                            Password = "$2a$11$NH1tsWB1K7RADYIPHc0ynu4JdC8qVJgy/7NGc1EXdMiSfNABLbKae",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "moderator"
                        },
                        new
                        {
                            UserId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phuongthao@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Phuong",
                            IsActive = false,
                            LastName = "Thao",
                            Password = "$2a$11$2Ba/rq0bJ7M1nfwmulN4cuG3W./GOuHtYUHO9ifDjYiP3OviqVo0i",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "phuongthao"
                        },
                        new
                        {
                            UserId = new Guid("fda6e282-e429-4364-a445-136b570e2fde"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quoctrieu@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Quoc",
                            IsActive = false,
                            LastName = "Trieu",
                            Password = "$2a$11$ByYQOxH0dizfB83234dpbeq2eARUHHdotAaliYJWpaHbTyMtw6PAy",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "quoctrieu"
                        },
                        new
                        {
                            UserId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "haugiang@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Hau",
                            IsActive = false,
                            LastName = "Giang",
                            Password = "$2a$11$udvbtxHnaK1..CafMpwgGu.FZRj4fiNsfMTF2x7gPXIbbZhWLCgh6",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "haugiang"
                        },
                        new
                        {
                            UserId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "minhphuoc@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Minh",
                            IsActive = false,
                            LastName = "Phuoc",
                            Password = "$2a$11$d1ATLh1Rj4aKMwesF4BmNO5q8UlVdG3NEGHfJWACmCcrIAxO.JVzS",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "minhphuoc"
                        },
                        new
                        {
                            UserId = new Guid("8130b91b-2e32-4aad-8479-3e01dd8813e3"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "haugiang01@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Hậu",
                            IsActive = false,
                            LastName = "Giang",
                            Password = "$2a$11$.Y/t2/z/JuJWOoNzffeAK.QOBoZR5rBpyj/qeEcPs.GLiqQvYudKW",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "haugiang45"
                        },
                        new
                        {
                            UserId = new Guid("273c8fa3-b3f4-4c6d-87da-07bc63a4c436"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1995, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "minhtran@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Minh",
                            IsActive = false,
                            LastName = "Trần",
                            Password = "$2a$11$o5QMsj8mo9U9lbIWE/BHl.P92GAoalCO57nN7eSz9aeNFw5GWvQCe",
                            PhoneNumber = "0987654321",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "minhtran"
                        },
                        new
                        {
                            UserId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2000, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thaonguyen@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Thảo",
                            IsActive = false,
                            LastName = "Nguyễn",
                            Password = "$2a$11$MbVX81Iykm4oEG1VRimFiOpJAOF1b./sL1Dds7SFZLxWJo60J.ieG",
                            PhoneNumber = "0912345678",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "thaonguyen"
                        },
                        new
                        {
                            UserId = new Guid("15b2d60f-bdfc-4ce1-8b03-f8b8c3d7480d"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1998, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anhpham@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Anh",
                            IsActive = false,
                            LastName = "Phạm",
                            Password = "$2a$11$LJ/kxUzt5FJY99ug5jg07.hKUeGTVf1OXue0eI3oehsedyUscNsf6",
                            PhoneNumber = "0908765432",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "anhpham"
                        },
                        new
                        {
                            UserId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1996, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "namle@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Nam",
                            IsActive = false,
                            LastName = "Lê",
                            Password = "$2a$11$P2ohUFYGyTbMZjJ1tACK.u3nky3x1oCEtXeCxlfcqHu/f//fcsoN2",
                            PhoneNumber = "0901234567",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "namle"
                        },
                        new
                        {
                            UserId = new Guid("ce914c08-8b01-483a-8b16-1c0e27284cc8"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1999, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lanhoang@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Lan",
                            IsActive = false,
                            LastName = "Hoàng",
                            Password = "$2a$11$taK9jUsm2fqLDujgC3fzveA7DDC7vcBxsShdgyrJqQMUjDSjsK4sS",
                            PhoneNumber = "0934567890",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "lanhoang"
                        },
                        new
                        {
                            UserId = new Guid("bf0b0b85-e98e-4da7-af44-b7198685cb78"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tudo@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Tú",
                            IsActive = false,
                            LastName = "Đỗ",
                            Password = "$2a$11$VZCueGFyOmUJ0C04ArYSXuAZf4T6Gc5ocQCr3ga7G0GwuEUvSCU6m",
                            PhoneNumber = "0981234567",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "tudo"
                        },
                        new
                        {
                            UserId = new Guid("fefd096b-eb6f-4843-a9fb-fdde2f08e960"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2001, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quynhphan@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Quỳnh",
                            IsActive = false,
                            LastName = "Phan",
                            Password = "$2a$11$gefGLkrM2A68WA00ZmO/x.EeEFXKXkgD3h27ig8Sa9XyglnLdjAaC",
                            PhoneNumber = "0908761234",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "quynhphan"
                        },
                        new
                        {
                            UserId = new Guid("97108917-856a-42af-937b-7b0e2e735b20"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1997, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "huongtrinh@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Hương",
                            IsActive = false,
                            LastName = "Trịnh",
                            Password = "$2a$11$F0Vh6hfWh623h0M1iYNaYe6YyeGImKuJugGEBGTIXgnfG6YVti4em",
                            PhoneNumber = "0937894561",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "huongtrinh"
                        },
                        new
                        {
                            UserId = new Guid("0da4bfc5-3a37-4a66-91d5-fe9e1d086564"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khangvo@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Khang",
                            IsActive = false,
                            LastName = "Võ",
                            Password = "$2a$11$epAdpZmFu5t00z/rvcvrw.CdCQSXBidRyH87XaOVyjIdKdkCbAsRW",
                            PhoneNumber = "0923456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "khangvo"
                        },
                        new
                        {
                            UserId = new Guid("f58236aa-5912-489a-8ffb-001d61e611c8"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nguyenvana@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Nguyen",
                            IsActive = false,
                            LastName = "Van A",
                            Password = "$2a$11$3ticIzPn.Q.ds79gmvcN2eSow6qti1k.4QLsHLQ5MxP/HVUNflAJi",
                            PhoneNumber = "0902345678",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "nguyenvana"
                        },
                        new
                        {
                            UserId = new Guid("803b1549-478c-421b-bd4b-2b6111836609"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2001, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lethib@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Le",
                            IsActive = false,
                            LastName = "Thi B",
                            Password = "$2a$11$is6yWYZzjq6RyMLHogYMaOt3XdudVEftTuqhN7RbII.U40gRelv42",
                            PhoneNumber = "0903456789",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "lethib"
                        },
                        new
                        {
                            UserId = new Guid("7c87c075-2c90-4c6e-8e8b-b903ec331072"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2000, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tranvanc@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Tran",
                            IsActive = false,
                            LastName = "Van C",
                            Password = "$2a$11$4wly8it.trLNA.YMdPkSKu0mQPmtm5BuPt9/RuN6JxPMfzU/IBI0O",
                            PhoneNumber = "0904567890",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "tranvanc"
                        },
                        new
                        {
                            UserId = new Guid("f370712b-0452-479c-a0d4-b4d2a7ace38f"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phamthid@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Pham",
                            IsActive = false,
                            LastName = "Thi D",
                            Password = "$2a$11$3sDF5hHucwflEagrhfZxZu3EvuqstAfGL7ZWPqdjJwVdEnYRelBY2",
                            PhoneNumber = "0905678901",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "phamthid"
                        },
                        new
                        {
                            UserId = new Guid("a6f939d3-eb8a-4884-8084-b1dc99559167"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dovane@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Do",
                            IsActive = false,
                            LastName = "Van E",
                            Password = "$2a$11$2Wwdt0N4lwHm68CZVyasL.qZw2HoLyZ6BlgJe.DYI8tjs4zk/R8da",
                            PhoneNumber = "0906789012",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "dovane"
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ExchangeRequest", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "CurrentProduct")
                        .WithMany("ExchangeRequestsSent")
                        .HasForeignKey("CurrentProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Receiver")
                        .WithMany("PreOrderToSellers")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Sender")
                        .WithMany("PreOrderToBuyers")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.Product", "TargetProduct")
                        .WithMany("ExchangeRequestsReceived")
                        .HasForeignKey("TargetProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CurrentProduct");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");

                    b.Navigation("TargetProduct");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Product", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "UserUpload")
                        .WithMany("Products")
                        .HasForeignKey("UserUploadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("UserUpload");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ProductImage", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Rating", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "Product")
                        .WithOne("Rate")
                        .HasForeignKey("GoodsExchange.Data.Models.Rating", "ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Receiver")
                        .WithMany("RatingsReceived")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Sender")
                        .WithMany("RatingsGiven")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Report", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "Product")
                        .WithMany("Reports")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Receiver")
                        .WithMany("ReportsReceived")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Sender")
                        .WithMany("ReportsMade")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Transaction", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.ExchangeRequest", "ExchangeRequest")
                        .WithOne("Transaction")
                        .HasForeignKey("GoodsExchange.Data.Models.Transaction", "ExchangeRequestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ExchangeRequest");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.User", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ExchangeRequest", b =>
                {
                    b.Navigation("Transaction")
                        .IsRequired();
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Product", b =>
                {
                    b.Navigation("ExchangeRequestsReceived");

                    b.Navigation("ExchangeRequestsSent");

                    b.Navigation("ProductImages");

                    b.Navigation("Rate")
                        .IsRequired();

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.User", b =>
                {
                    b.Navigation("PreOrderToBuyers");

                    b.Navigation("PreOrderToSellers");

                    b.Navigation("Products");

                    b.Navigation("RatingsGiven");

                    b.Navigation("RatingsReceived");

                    b.Navigation("ReportsMade");

                    b.Navigation("ReportsReceived");
                });
#pragma warning restore 612, 618
        }
    }
}
