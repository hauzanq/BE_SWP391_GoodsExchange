// <auto-generated />
using System;
using GoodsExchange.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoodsExchange.Data.Migrations
{
    [DbContext(typeof(GoodsExchangeDbContext))]
    partial class GoodsExchangeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GoodsExchange.Data.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            CategoryName = "School Supplies",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            CategoryName = "Stationery",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            CategoryName = "Textbooks",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            CategoryName = "Lab Equipment",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ExchangeRequest", b =>
                {
                    b.Property<Guid>("ExchangeRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrentProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReceiverStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SenderStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TargetProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ExchangeRequestId");

                    b.HasIndex("CurrentProductId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.HasIndex("TargetProductId");

                    b.ToTable("ExchangeRequests");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsReviewed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserUploadId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserUploadId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("88ce4ef8-54b6-4384-a199-27f7349f4031"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8403),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A high-quality microscope featuring LED illumination for clear and detailed observation of specimens.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Spiral Notebook",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8400),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        },
                        new
                        {
                            ProductId = new Guid("769cd96a-d451-4b76-84cb-fc7c50c6712c"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8411),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A set of durable glass beakers with clear measurement markings for laboratory use.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Glass Beaker Set",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8411),
                            UserUploadId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13")
                        },
                        new
                        {
                            ProductId = new Guid("b02d36ec-5aa4-4c44-8e47-900a6ca578f3"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8414),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A set of premium ink refills suitable for fountain pens, ensuring smooth and consistent writing.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Biology: Principles and Explorations",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8413),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("4df59c01-5a6a-4c97-b8a2-f98f2e608e19"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8416),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "An introductory textbook designed to help students understand the basic principles of physics.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "High-Quality Ruler Set",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8416),
                            UserUploadId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0")
                        },
                        new
                        {
                            ProductId = new Guid("fe929c27-5166-4259-8610-be6d282e8813"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8421),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "An introductory textbook designed to help students understand the basic principles of physics.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Digital Thermometer",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8420),
                            UserUploadId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf")
                        },
                        new
                        {
                            ProductId = new Guid("b5b33943-d3ee-4262-9070-490f61a8c077"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8424),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A pack of colorful sticky notes for quick reminders, notes, and organizing your tasks.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Glass Beaker Set",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8424),
                            UserUploadId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a")
                        },
                        new
                        {
                            ProductId = new Guid("c136f105-ce3e-4a7c-889d-f756ca62ea98"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8426),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A set of premium ink refills suitable for fountain pens, ensuring smooth and consistent writing.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Coloring Pencil Pack",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8426),
                            UserUploadId = new Guid("97108917-856a-42af-937b-7b0e2e735b20")
                        },
                        new
                        {
                            ProductId = new Guid("b9897b12-1b11-43d9-8bdd-76fb6cf7318a"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8429),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A set of durable glass beakers with clear measurement markings for laboratory use.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "High-Quality Ruler Set",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8428),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("f3fe6a0a-b51b-4863-948a-d74973599283"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8432),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A digital thermometer with high precision for measuring temperatures in scientific experiments.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Mechanical Pencil Set",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8432),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        },
                        new
                        {
                            ProductId = new Guid("41ccd1ce-b6b5-4b60-8cfe-95f284e68074"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8435),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "An in-depth textbook exploring the history and achievements of ancient civilizations from around the world.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Elegant Fountain Pen",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8435),
                            UserUploadId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13")
                        },
                        new
                        {
                            ProductId = new Guid("f45f5eb1-6175-4a30-9c22-6674e80585e1"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8438),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A spacious and ergonomic backpack designed to carry all your school supplies comfortably.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Premium Ink Refills",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8437),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("eac851f8-3e1d-4137-96fc-48f9ee393c65"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8440),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A spiral-bound notebook with a durable cover, ideal for taking notes and journaling.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Laboratory Measuring Cylinder",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8439),
                            UserUploadId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0")
                        },
                        new
                        {
                            ProductId = new Guid("123d7ea7-1a69-4db8-b006-4409df8e395a"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8443),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A set of premium ink refills suitable for fountain pens, ensuring smooth and consistent writing.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "High-Quality Ruler Set",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8443),
                            UserUploadId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf")
                        },
                        new
                        {
                            ProductId = new Guid("52767fa0-d6ca-4116-961a-c9bfbc57102d"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8445),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "An in-depth textbook exploring the history and achievements of ancient civilizations from around the world.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Assorted Sticky Notes",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8445),
                            UserUploadId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a")
                        },
                        new
                        {
                            ProductId = new Guid("3ffaed44-6b46-4179-9de3-cfaf12067512"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8463),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A spiral-bound notebook with a durable cover, ideal for taking notes and journaling.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Glass Beaker Set",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8463),
                            UserUploadId = new Guid("97108917-856a-42af-937b-7b0e2e735b20")
                        },
                        new
                        {
                            ProductId = new Guid("7a3061a2-3b1e-43cf-93bc-097d8b1523d5"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8465),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A pack of colorful sticky notes for quick reminders, notes, and organizing your tasks.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "History of Ancient Civilizations",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8465),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("382b8273-b6b8-4dc9-96d8-1c92b3a7780c"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8469),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A comprehensive textbook covering fundamental algebraic concepts and problem-solving techniques.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Microscope with LED Illumination",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8469),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        },
                        new
                        {
                            ProductId = new Guid("7afdb14c-6349-414a-a893-8e4983459f5f"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8472),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A spiral-bound notebook with a durable cover, ideal for taking notes and journaling.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Assorted Sticky Notes",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8472),
                            UserUploadId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13")
                        },
                        new
                        {
                            ProductId = new Guid("9ad52309-8602-47ba-87b7-6873fedf95e3"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8474),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A set of durable rulers made from high-quality materials, perfect for accurate measurements and drawings.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Spiral Notebook",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8474),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("a7427fa4-862e-43ff-8213-180e4306f062"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8476),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A set of durable glass beakers with clear measurement markings for laboratory use.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Microscope with LED Illumination",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8476),
                            UserUploadId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0")
                        },
                        new
                        {
                            ProductId = new Guid("e2af08b7-0b3c-4bd7-84bd-df502861c540"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8480),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "An elegant fountain pen with a sleek design, ideal for professional writing and note-taking.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Elegant Fountain Pen",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8479),
                            UserUploadId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf")
                        },
                        new
                        {
                            ProductId = new Guid("c400856a-60ce-491a-830d-1b44abe1f24a"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8486),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A digital thermometer with high precision for measuring temperatures in scientific experiments.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Spiral Notebook",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8485),
                            UserUploadId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a")
                        },
                        new
                        {
                            ProductId = new Guid("402d882e-cdb4-46a9-856c-2c9c41b5ca2c"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8488),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "An elegant fountain pen with a sleek design, ideal for professional writing and note-taking.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Laboratory Measuring Cylinder",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8488),
                            UserUploadId = new Guid("97108917-856a-42af-937b-7b0e2e735b20")
                        },
                        new
                        {
                            ProductId = new Guid("6ed94cce-8110-4b46-8237-c372cdd0bf21"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8490),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A pack of vibrant coloring pencils for creative drawing and coloring activities.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Microscope with LED Illumination",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8490),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("7ec45539-79e4-4702-a74b-6f5d77c1bcfc"),
                            ApprovedDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8494),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A set of durable rulers made from high-quality materials, perfect for accurate measurements and drawings.",
                            IsActive = true,
                            IsApproved = true,
                            IsReviewed = true,
                            ProductName = "Mechanical Pencil Set",
                            UploadDate = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8493),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f235b67d-ac97-49e6-85e2-edfe7710cfb0"),
                            Caption = "Image for Spiral Notebook",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8409),
                            FileSize = 1024L,
                            ImagePath = "https://png.pngtree.com/element_origin_min_pic/16/09/23/1857e50467c5629.jpg",
                            ProductId = new Guid("88ce4ef8-54b6-4384-a199-27f7349f4031")
                        },
                        new
                        {
                            Id = new Guid("44be8ee1-47d3-4b62-976a-0d1a200ceb96"),
                            Caption = "Image for Glass Beaker Set",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8412),
                            FileSize = 2048L,
                            ImagePath = "https://img.lovepik.com/element/40145/4924.png_860.png",
                            ProductId = new Guid("769cd96a-d451-4b76-84cb-fc7c50c6712c")
                        },
                        new
                        {
                            Id = new Guid("813a1df5-4b16-4836-aa50-dfab1f5efff5"),
                            Caption = "Image for Biology: Principles and Explorations",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8415),
                            FileSize = 3072L,
                            ImagePath = "https://img.lovepik.com/element/40154/8917.png_300.png",
                            ProductId = new Guid("b02d36ec-5aa4-4c44-8e47-900a6ca578f3")
                        },
                        new
                        {
                            Id = new Guid("e5e831cb-7a86-4c8e-a249-fdde5d76d3e0"),
                            Caption = "Image for High-Quality Ruler Set",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8419),
                            FileSize = 4096L,
                            ImagePath = "https://img.lovepik.com/element/40148/8397.png_300.png",
                            ProductId = new Guid("4df59c01-5a6a-4c97-b8a2-f98f2e608e19")
                        },
                        new
                        {
                            Id = new Guid("f76bae87-8ea6-4f6d-b1ae-0b54e83b0d5e"),
                            Caption = "Image for Digital Thermometer",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8422),
                            FileSize = 5120L,
                            ImagePath = "https://img.lovepik.com/original_origin_pic/18/08/09/ad4800dc49f64e450ae5f7d2c15bbd69.png_wh300.png",
                            ProductId = new Guid("fe929c27-5166-4259-8610-be6d282e8813")
                        },
                        new
                        {
                            Id = new Guid("b9e2f682-778c-4e0f-9612-160c6123322d"),
                            Caption = "Image for Glass Beaker Set",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8425),
                            FileSize = 6144L,
                            ImagePath = "https://img.lovepik.com/png/20231021/School-office-supplies-binding-machine-stapler-book-stationery_289576_wh300.png",
                            ProductId = new Guid("b5b33943-d3ee-4262-9070-490f61a8c077")
                        },
                        new
                        {
                            Id = new Guid("f796c674-83bb-465f-9042-e3cebcb50848"),
                            Caption = "Image for Coloring Pencil Pack",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8427),
                            FileSize = 7168L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-cute.jpg",
                            ProductId = new Guid("c136f105-ce3e-4a7c-889d-f756ca62ea98")
                        },
                        new
                        {
                            Id = new Guid("6f88284d-c9fe-46e1-ab11-20a9a4f550b3"),
                            Caption = "Image for High-Quality Ruler Set",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8431),
                            FileSize = 8192L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-de-thuong.jpg",
                            ProductId = new Guid("b9897b12-1b11-43d9-8bdd-76fb6cf7318a")
                        },
                        new
                        {
                            Id = new Guid("9c7b0f5a-b54c-4acf-85d4-646f8cda2e87"),
                            Caption = "Image for Mechanical Pencil Set",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8434),
                            FileSize = 9216L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQClbO9Pb9b1e1cm18mublklMG69UYXdPgGgbeNGPutxgObEWNt0gMTNXmOHZInEp8O1ro&usqp=CAU",
                            ProductId = new Guid("f3fe6a0a-b51b-4863-948a-d74973599283")
                        },
                        new
                        {
                            Id = new Guid("d3e1a158-6c4c-4d5c-a1ca-9a39523fc136"),
                            Caption = "Image for Elegant Fountain Pen",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8436),
                            FileSize = 10240L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRxXUh1O9kqmHicXzEZYoksQl0zKVwNW3KRoI2N39oO3Yyw33D03xmltVXOqTtbTa3gAfU&usqp=CAU",
                            ProductId = new Guid("41ccd1ce-b6b5-4b60-8cfe-95f284e68074")
                        },
                        new
                        {
                            Id = new Guid("8c502d35-2a0f-44a2-8875-35dc2bbc2952"),
                            Caption = "Image for Premium Ink Refills",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8439),
                            FileSize = 11264L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjY5xXwr880MJU4ZMkHoS4Kk9uBvJlVOocsyyr8c-SZIhpInnWpbdrTbxLSwIGRTqLtQE&usqp=CAU",
                            ProductId = new Guid("f45f5eb1-6175-4a30-9c22-6674e80585e1")
                        },
                        new
                        {
                            Id = new Guid("abfcace1-cdd5-4818-9ae9-0c5fbdcab013"),
                            Caption = "Image for Laboratory Measuring Cylinder",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8442),
                            FileSize = 12288L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRTzAg7kp7XyYhhU7MlQDH_Or2jTxIPZuyl3j_hA01ywVLBmo5qSkIeTbDE4C7DaKdDlyI&usqp=CAU",
                            ProductId = new Guid("eac851f8-3e1d-4137-96fc-48f9ee393c65")
                        },
                        new
                        {
                            Id = new Guid("24f78a9c-851e-46e0-aa73-68b7d388af84"),
                            Caption = "Image for High-Quality Ruler Set",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8444),
                            FileSize = 13312L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSo-afGGvOl-uAIciO_inSUbq8c2WrvHEA8zA&s",
                            ProductId = new Guid("123d7ea7-1a69-4db8-b006-4409df8e395a")
                        },
                        new
                        {
                            Id = new Guid("34996122-9a02-499a-aa7c-9d25687bed50"),
                            Caption = "Image for Assorted Sticky Notes",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8446),
                            FileSize = 14336L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNhUHteq_2myNyWXDG0-tdUmElcHC5ZufUbA&s",
                            ProductId = new Guid("52767fa0-d6ca-4116-961a-c9bfbc57102d")
                        },
                        new
                        {
                            Id = new Guid("75cd11b9-0cd1-47c2-a9d0-02e0dcd2c932"),
                            Caption = "Image for Glass Beaker Set",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8464),
                            FileSize = 15360L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEabvTjiSCtzyqA2S0JmFbTYH53qBm-WjioQ&s",
                            ProductId = new Guid("3ffaed44-6b46-4179-9de3-cfaf12067512")
                        },
                        new
                        {
                            Id = new Guid("9c79166e-34bb-4cae-96d8-93e260c07d8e"),
                            Caption = "Image for History of Ancient Civilizations",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8468),
                            FileSize = 16384L,
                            ImagePath = "https://png.pngtree.com/png-vector/20190130/ourlarge/pngtree-simple-and-cute-school-supplies-stationery-suppliesstationerystaplerpenpencil-casecorrection-fluidrubber-png-image_674963.jpg",
                            ProductId = new Guid("7a3061a2-3b1e-43cf-93bc-097d8b1523d5")
                        },
                        new
                        {
                            Id = new Guid("1f890c58-742d-4866-8a67-9a3f115b7e8f"),
                            Caption = "Image for Microscope with LED Illumination",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8471),
                            FileSize = 17408L,
                            ImagePath = "https://png.pngtree.com/element_origin_min_pic/16/09/23/1857e50467c5629.jpg",
                            ProductId = new Guid("382b8273-b6b8-4dc9-96d8-1c92b3a7780c")
                        },
                        new
                        {
                            Id = new Guid("e0da6f80-a2c4-43f0-83b6-f2b4a8e2bd61"),
                            Caption = "Image for Assorted Sticky Notes",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8473),
                            FileSize = 18432L,
                            ImagePath = "https://img.lovepik.com/element/40145/4924.png_860.png",
                            ProductId = new Guid("7afdb14c-6349-414a-a893-8e4983459f5f")
                        },
                        new
                        {
                            Id = new Guid("339971d6-1ca5-4921-9809-e7dcc8b2a0fd"),
                            Caption = "Image for Spiral Notebook",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8475),
                            FileSize = 19456L,
                            ImagePath = "https://img.lovepik.com/element/40154/8917.png_300.png",
                            ProductId = new Guid("9ad52309-8602-47ba-87b7-6873fedf95e3")
                        },
                        new
                        {
                            Id = new Guid("d688d069-ffde-4f8e-8e11-01d4f0023bcd"),
                            Caption = "Image for Microscope with LED Illumination",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8478),
                            FileSize = 20480L,
                            ImagePath = "https://img.lovepik.com/element/40148/8397.png_300.png",
                            ProductId = new Guid("a7427fa4-862e-43ff-8213-180e4306f062")
                        },
                        new
                        {
                            Id = new Guid("86af5310-27ab-4c5d-ab46-d9a43945ec13"),
                            Caption = "Image for Elegant Fountain Pen",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8485),
                            FileSize = 21504L,
                            ImagePath = "https://img.lovepik.com/original_origin_pic/18/08/09/ad4800dc49f64e450ae5f7d2c15bbd69.png_wh300.png",
                            ProductId = new Guid("e2af08b7-0b3c-4bd7-84bd-df502861c540")
                        },
                        new
                        {
                            Id = new Guid("ac66efc5-801b-4feb-8f53-024ca254bf7c"),
                            Caption = "Image for Spiral Notebook",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8487),
                            FileSize = 22528L,
                            ImagePath = "https://img.lovepik.com/png/20231021/School-office-supplies-binding-machine-stapler-book-stationery_289576_wh300.png",
                            ProductId = new Guid("c400856a-60ce-491a-830d-1b44abe1f24a")
                        },
                        new
                        {
                            Id = new Guid("d1af3652-1549-4d2b-900f-71ceae098c8a"),
                            Caption = "Image for Laboratory Measuring Cylinder",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8489),
                            FileSize = 23552L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-cute.jpg",
                            ProductId = new Guid("402d882e-cdb4-46a9-856c-2c9c41b5ca2c")
                        },
                        new
                        {
                            Id = new Guid("94d648a9-d02c-4770-bfe7-74e190863949"),
                            Caption = "Image for Microscope with LED Illumination",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8492),
                            FileSize = 24576L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-de-thuong.jpg",
                            ProductId = new Guid("6ed94cce-8110-4b46-8237-c372cdd0bf21")
                        },
                        new
                        {
                            Id = new Guid("abd1588e-a362-4a7f-9708-fd0502fa1e91"),
                            Caption = "Image for Mechanical Pencil Set",
                            DateCreated = new DateTime(2024, 7, 27, 12, 5, 38, 688, DateTimeKind.Utc).AddTicks(8494),
                            FileSize = 25600L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQClbO9Pb9b1e1cm18mublklMG69UYXdPgGgbeNGPutxgObEWNt0gMTNXmOHZInEp8O1ro&usqp=CAU",
                            ProductId = new Guid("7ec45539-79e4-4702-a74b-6f5d77c1bcfc")
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Rating", b =>
                {
                    b.Property<Guid>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NumberStars")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RatingId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Report", b =>
                {
                    b.Property<Guid>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReportId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("e398cee3-6381-4a52-aaf5-20a2e9b54810"),
                            RoleName = "Administrator"
                        },
                        new
                        {
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            RoleName = "Moderator"
                        },
                        new
                        {
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Transaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExchangeRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TransactionId");

                    b.HasIndex("ExchangeRequestId")
                        .IsUnique();

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("EmailConfirm")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("0af02748-9d43-4110-81e5-93d9ece8cfda"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "minhkhoa@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Minh",
                            IsActive = false,
                            LastName = "Khoa",
                            Password = "$2a$11$4rhg0Bk0DhaWT9bvW.gjquz3vk/eDUmepgsgmTwZJ7W1hKNhpZR8S",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("e398cee3-6381-4a52-aaf5-20a2e9b54810"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "admin"
                        },
                        new
                        {
                            UserId = new Guid("b6b6e80f-cc04-43e3-800f-a3c89b3ba017"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phamthanh@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Pham",
                            IsActive = false,
                            LastName = "Thanh",
                            Password = "$2a$11$B2r2B/CQ46yDqJbvnJsl7OcEWfMGWW1J4Gc22bnbwhcu7wKKrn2nC",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "moderator"
                        },
                        new
                        {
                            UserId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phuongthao@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Phuong",
                            IsActive = false,
                            LastName = "Thao",
                            Password = "$2a$11$Z4n/kFTYHzMAIibvUJ822OuzdWvq52vj68liY1JzTV58A.xfKoPr2",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "phuongthao"
                        },
                        new
                        {
                            UserId = new Guid("fda6e282-e429-4364-a445-136b570e2fde"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quoctrieu@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Quoc",
                            IsActive = false,
                            LastName = "Trieu",
                            Password = "$2a$11$LU342DJ5CKi7HLFYQRmFPON4v216s1th6zEGTrNePmpjbfdmuwUoG",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "quoctrieu"
                        },
                        new
                        {
                            UserId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "haugiang@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Hau",
                            IsActive = false,
                            LastName = "Giang",
                            Password = "$2a$11$s4MzxAMfEiilgD.9IiK8wO70bsinuycKXpXl2D.DU2/jlZREVWqiy",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "haugiang"
                        },
                        new
                        {
                            UserId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "minhphuoc@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Minh",
                            IsActive = false,
                            LastName = "Phuoc",
                            Password = "$2a$11$Lho0i/GyETa94iJIrU3KluQ5yJ/KuBjdhGvD7o6WNdvUNfa7k3yMq",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "minhphuoc"
                        },
                        new
                        {
                            UserId = new Guid("8130b91b-2e32-4aad-8479-3e01dd8813e3"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "haugiang01@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Hậu",
                            IsActive = false,
                            LastName = "Giang",
                            Password = "$2a$11$qpnr2IVd3NJGc8vldUnIEOI7bKSYA5h2FqkK7tvmc4hbktnEoBRvm",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "haugiang45"
                        },
                        new
                        {
                            UserId = new Guid("273c8fa3-b3f4-4c6d-87da-07bc63a4c436"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1995, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "minhtran@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Minh",
                            IsActive = false,
                            LastName = "Trần",
                            Password = "$2a$11$rAk2XwQ0epsKDB9SasFmQOhd9BYCAxDjOa6jIfby3svUbtednvuj2",
                            PhoneNumber = "0987654321",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "minhtran"
                        },
                        new
                        {
                            UserId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2000, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thaonguyen@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Thảo",
                            IsActive = false,
                            LastName = "Nguyễn",
                            Password = "$2a$11$eWqbYpgcOAlM/YyYUcsOx.sD9gHc3oYKwASUFQlG/kLBj5ip.Toby",
                            PhoneNumber = "0912345678",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "thaonguyen"
                        },
                        new
                        {
                            UserId = new Guid("15b2d60f-bdfc-4ce1-8b03-f8b8c3d7480d"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1998, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anhpham@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Anh",
                            IsActive = false,
                            LastName = "Phạm",
                            Password = "$2a$11$pgo0EiVb6m6q8pCTQXCir.lp2HX4JfRmzbBcH8d6StUsuDxssuEZe",
                            PhoneNumber = "0908765432",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "anhpham"
                        },
                        new
                        {
                            UserId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1996, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "namle@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Nam",
                            IsActive = false,
                            LastName = "Lê",
                            Password = "$2a$11$FS1vzJhQdW.2Ur3cWmwsfeIutpcu2/iFMSBAGaHGRNzJRCSp66mgy",
                            PhoneNumber = "0901234567",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "namle"
                        },
                        new
                        {
                            UserId = new Guid("ce914c08-8b01-483a-8b16-1c0e27284cc8"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1999, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lanhoang@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Lan",
                            IsActive = false,
                            LastName = "Hoàng",
                            Password = "$2a$11$9UlO8vFcwyNpSeudxhzEZuoDxl4U84LheKvRxsqnNGuaGjJhsN6CS",
                            PhoneNumber = "0934567890",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "lanhoang"
                        },
                        new
                        {
                            UserId = new Guid("bf0b0b85-e98e-4da7-af44-b7198685cb78"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tudo@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Tú",
                            IsActive = false,
                            LastName = "Đỗ",
                            Password = "$2a$11$jk1eEcsEUAMPgxzmBJ67Jumu9eex1Dqv3Sahu/ExG3U8OeKGwMfOa",
                            PhoneNumber = "0981234567",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "tudo"
                        },
                        new
                        {
                            UserId = new Guid("fefd096b-eb6f-4843-a9fb-fdde2f08e960"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2001, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quynhphan@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Quỳnh",
                            IsActive = false,
                            LastName = "Phan",
                            Password = "$2a$11$94JUvcD5F7bEYSAwnAhKMONxWXkiHHB5Xf.p9JmrDebUObHnzvgWa",
                            PhoneNumber = "0908761234",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "quynhphan"
                        },
                        new
                        {
                            UserId = new Guid("97108917-856a-42af-937b-7b0e2e735b20"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1997, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "huongtrinh@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Hương",
                            IsActive = false,
                            LastName = "Trịnh",
                            Password = "$2a$11$rjQu11pGuBl1fn3cUF/khekPHi9XUIXSpTPL0xrJdQcAEQ9nNxHfG",
                            PhoneNumber = "0937894561",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "huongtrinh"
                        },
                        new
                        {
                            UserId = new Guid("0da4bfc5-3a37-4a66-91d5-fe9e1d086564"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khangvo@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Khang",
                            IsActive = false,
                            LastName = "Võ",
                            Password = "$2a$11$DJED2zeYxhi/PjXznbWwiuNJci2mSrjfuWyoW0QEearb7xn2Lu8di",
                            PhoneNumber = "0923456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "khangvo"
                        },
                        new
                        {
                            UserId = new Guid("f58236aa-5912-489a-8ffb-001d61e611c8"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nguyenvana@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Nguyen",
                            IsActive = false,
                            LastName = "Van A",
                            Password = "$2a$11$cka3EZij1YEnFT9WpC890uwvmUGmiZToaciZXPlOTY115YMSFKaUe",
                            PhoneNumber = "0902345678",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "nguyenvana"
                        },
                        new
                        {
                            UserId = new Guid("803b1549-478c-421b-bd4b-2b6111836609"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2001, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lethib@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Le",
                            IsActive = false,
                            LastName = "Thi B",
                            Password = "$2a$11$N/xEb45QUQwhHfG/u5mafO3AlIHWqcK5UbCzEn8OmMLp1hp3HrSiW",
                            PhoneNumber = "0903456789",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "lethib"
                        },
                        new
                        {
                            UserId = new Guid("7c87c075-2c90-4c6e-8e8b-b903ec331072"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2000, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tranvanc@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Tran",
                            IsActive = false,
                            LastName = "Van C",
                            Password = "$2a$11$eCq4AW.GtWd/817beRYHCebvXDjxqK4.qj2J95FJWhJiAaMxO4EFK",
                            PhoneNumber = "0904567890",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "tranvanc"
                        },
                        new
                        {
                            UserId = new Guid("f370712b-0452-479c-a0d4-b4d2a7ace38f"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phamthid@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Pham",
                            IsActive = false,
                            LastName = "Thi D",
                            Password = "$2a$11$tFD/Ob/5ZnrBh2Jqh4R22umC6Y47Zn7vwzSzxLGv.kjpCA/.XVTYm",
                            PhoneNumber = "0905678901",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "phamthid"
                        },
                        new
                        {
                            UserId = new Guid("a6f939d3-eb8a-4884-8084-b1dc99559167"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dovane@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Do",
                            IsActive = false,
                            LastName = "Van E",
                            Password = "$2a$11$DDWtBJxUanwmmV/f5.UrzOMvygxPgvySTFWfGDqjIvihNg8mUPI.G",
                            PhoneNumber = "0906789012",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "dovane"
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ExchangeRequest", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "CurrentProduct")
                        .WithMany("ExchangeRequestsSent")
                        .HasForeignKey("CurrentProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Receiver")
                        .WithMany("PreOrderToSellers")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Sender")
                        .WithMany("PreOrderToBuyers")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.Product", "TargetProduct")
                        .WithMany("ExchangeRequestsReceived")
                        .HasForeignKey("TargetProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CurrentProduct");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");

                    b.Navigation("TargetProduct");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Product", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "UserUpload")
                        .WithMany("Products")
                        .HasForeignKey("UserUploadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("UserUpload");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ProductImage", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Rating", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "Product")
                        .WithOne("Rate")
                        .HasForeignKey("GoodsExchange.Data.Models.Rating", "ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Receiver")
                        .WithMany("RatingsReceived")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Sender")
                        .WithMany("RatingsGiven")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Report", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "Product")
                        .WithMany("Reports")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Receiver")
                        .WithMany("ReportsReceived")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Sender")
                        .WithMany("ReportsMade")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Transaction", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.ExchangeRequest", "ExchangeRequest")
                        .WithOne("Transaction")
                        .HasForeignKey("GoodsExchange.Data.Models.Transaction", "ExchangeRequestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ExchangeRequest");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.User", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ExchangeRequest", b =>
                {
                    b.Navigation("Transaction")
                        .IsRequired();
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Product", b =>
                {
                    b.Navigation("ExchangeRequestsReceived");

                    b.Navigation("ExchangeRequestsSent");

                    b.Navigation("ProductImages");

                    b.Navigation("Rate")
                        .IsRequired();

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.User", b =>
                {
                    b.Navigation("PreOrderToBuyers");

                    b.Navigation("PreOrderToSellers");

                    b.Navigation("Products");

                    b.Navigation("RatingsGiven");

                    b.Navigation("RatingsReceived");

                    b.Navigation("ReportsMade");

                    b.Navigation("ReportsReceived");
                });
#pragma warning restore 612, 618
        }
    }
}
