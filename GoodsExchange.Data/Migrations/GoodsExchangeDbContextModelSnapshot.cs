// <auto-generated />
using System;
using GoodsExchange.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoodsExchange.Data.Migrations
{
    [DbContext(typeof(GoodsExchangeDbContext))]
    partial class GoodsExchangeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GoodsExchange.Data.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            CategoryName = "School Supplies",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            CategoryName = "Stationery",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            CategoryName = "Textbooks",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            CategoryName = "Lab Equipment",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ExchangeRequest", b =>
                {
                    b.Property<Guid>("ExchangeRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrentProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReceiverStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SenderStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TargetProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ExchangeRequestId");

                    b.HasIndex("CurrentProductId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.HasIndex("TargetProductId");

                    b.ToTable("ExchangeRequests");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserUploadId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserUploadId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("b1c34b49-2040-4fbc-b4ee-a6030b8e00f3"),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A spacious and ergonomic backpack designed to carry all your school supplies comfortably.",
                            ProductName = "Spiral Notebook",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6666),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        },
                        new
                        {
                            ProductId = new Guid("0e18960a-1a99-4d16-8c78-830223a57946"),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A high-quality microscope featuring LED illumination for clear and detailed observation of specimens.",
                            ProductName = "Mechanical Pencil Set",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6680),
                            UserUploadId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13")
                        },
                        new
                        {
                            ProductId = new Guid("7e8331d5-2ad5-45bf-96c0-fa8b3524560e"),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A set of high-quality mechanical pencils with refillable lead, perfect for precise writing.",
                            ProductName = "Assorted Sticky Notes",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6683),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("7527f9de-ed04-427b-b0a7-ca0c1ab87f27"),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A spiral-bound notebook with a durable cover, ideal for taking notes and journaling.",
                            ProductName = "Physics for Beginners",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6686),
                            UserUploadId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0")
                        },
                        new
                        {
                            ProductId = new Guid("340dc0a5-3a7d-4cdc-bfad-320401dd65ed"),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A spiral-bound notebook with a durable cover, ideal for taking notes and journaling.",
                            ProductName = "Laboratory Measuring Cylinder",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6691),
                            UserUploadId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf")
                        },
                        new
                        {
                            ProductId = new Guid("83025556-ac61-447f-8e4a-f30e80a288b0"),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A set of durable rulers made from high-quality materials, perfect for accurate measurements and drawings.",
                            ProductName = "Premium Ink Refills",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6695),
                            UserUploadId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a")
                        },
                        new
                        {
                            ProductId = new Guid("63827fb5-e13f-4386-a254-c540f8261337"),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A set of premium ink refills suitable for fountain pens, ensuring smooth and consistent writing.",
                            ProductName = "Digital Thermometer",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6698),
                            UserUploadId = new Guid("97108917-856a-42af-937b-7b0e2e735b20")
                        },
                        new
                        {
                            ProductId = new Guid("76f13dae-939e-44c5-91f6-fce97dd22f9e"),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A set of high-quality mechanical pencils with refillable lead, perfect for precise writing.",
                            ProductName = "Microscope with LED Illumination",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6701),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("ff25d9a1-6694-4215-9ae7-6ae6695650ae"),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A spiral-bound notebook with a durable cover, ideal for taking notes and journaling.",
                            ProductName = "Physics for Beginners",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6705),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        },
                        new
                        {
                            ProductId = new Guid("285549ee-a02c-468f-87f8-941ddeed3386"),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A pack of vibrant coloring pencils for creative drawing and coloring activities.",
                            ProductName = "Biology: Principles and Explorations",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6709),
                            UserUploadId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13")
                        },
                        new
                        {
                            ProductId = new Guid("84a19fb2-7912-41f4-b646-fb23b717d7b5"),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A precision measuring cylinder designed for accurate measurement of liquids in laboratory settings.",
                            ProductName = "Coloring Pencil Pack",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6711),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("ed017538-cd55-419d-8661-c6996767386f"),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A high-quality microscope featuring LED illumination for clear and detailed observation of specimens.",
                            ProductName = "Elegant Fountain Pen",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6713),
                            UserUploadId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0")
                        },
                        new
                        {
                            ProductId = new Guid("1dd24a05-a6d5-471f-9cdf-cd83203a87e8"),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "An elegant fountain pen with a sleek design, ideal for professional writing and note-taking.",
                            ProductName = "Premium Ink Refills",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6717),
                            UserUploadId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf")
                        },
                        new
                        {
                            ProductId = new Guid("f8837775-a83c-4dc5-9dee-5eabdced85f5"),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "An elegant fountain pen with a sleek design, ideal for professional writing and note-taking.",
                            ProductName = "Elegant Fountain Pen",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6719),
                            UserUploadId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a")
                        },
                        new
                        {
                            ProductId = new Guid("32cfa938-c0ed-4c83-9425-d621c36f2d5c"),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A set of durable rulers made from high-quality materials, perfect for accurate measurements and drawings.",
                            ProductName = "Microscope with LED Illumination",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6737),
                            UserUploadId = new Guid("97108917-856a-42af-937b-7b0e2e735b20")
                        },
                        new
                        {
                            ProductId = new Guid("b2b06fa5-9926-4e89-a6d3-1f7732a9ecb1"),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A set of high-quality mechanical pencils with refillable lead, perfect for precise writing.",
                            ProductName = "History of Ancient Civilizations",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6739),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("c3c59e74-e2b8-4758-a373-42277552d373"),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A comprehensive textbook covering fundamental algebraic concepts and problem-solving techniques.",
                            ProductName = "Premium Ink Refills",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6743),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        },
                        new
                        {
                            ProductId = new Guid("45bcfb67-2869-411d-be9a-f649afa44482"),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A spacious and ergonomic backpack designed to carry all your school supplies comfortably.",
                            ProductName = "Introduction to Algebra",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6747),
                            UserUploadId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13")
                        },
                        new
                        {
                            ProductId = new Guid("c5d6a1fd-2414-42b6-9b70-5e1cd3f03e39"),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A spacious and ergonomic backpack designed to carry all your school supplies comfortably.",
                            ProductName = "Spiral Notebook",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6749),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("e666c628-e973-4fcc-a297-f978832ed133"),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A spacious and ergonomic backpack designed to carry all your school supplies comfortably.",
                            ProductName = "Microscope with LED Illumination",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6751),
                            UserUploadId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0")
                        },
                        new
                        {
                            ProductId = new Guid("01aad690-b271-486c-aae2-42993aeb18b9"),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A set of durable rulers made from high-quality materials, perfect for accurate measurements and drawings.",
                            ProductName = "Coloring Pencil Pack",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6755),
                            UserUploadId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf")
                        },
                        new
                        {
                            ProductId = new Guid("35bb966d-c405-44f8-9831-c0b4c7e20c3e"),
                            CategoryId = new Guid("d7fde8ab-4995-4252-8c34-0d6a4077f1e3"),
                            Description = "A pack of colorful sticky notes for quick reminders, notes, and organizing your tasks.",
                            ProductName = "Premium Ink Refills",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6758),
                            UserUploadId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a")
                        },
                        new
                        {
                            ProductId = new Guid("ddd095c3-e3c6-43ca-bdac-48ad0c615576"),
                            CategoryId = new Guid("93838a5d-b3c7-4c47-ba22-f6e26755203f"),
                            Description = "A set of durable glass beakers with clear measurement markings for laboratory use.",
                            ProductName = "Student Backpack",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6763),
                            UserUploadId = new Guid("97108917-856a-42af-937b-7b0e2e735b20")
                        },
                        new
                        {
                            ProductId = new Guid("fd55975f-e3e1-41e9-9629-9a4f2086d065"),
                            CategoryId = new Guid("119e60e0-789a-47e2-a280-e0c1a9a7032f"),
                            Description = "A set of durable glass beakers with clear measurement markings for laboratory use.",
                            ProductName = "Physics for Beginners",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6765),
                            UserUploadId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54")
                        },
                        new
                        {
                            ProductId = new Guid("7e6a2bdc-d4f8-4703-8d49-aa52b8244269"),
                            CategoryId = new Guid("765fa035-d385-4ae3-a86b-7e4bea643060"),
                            Description = "A set of premium ink refills suitable for fountain pens, ensuring smooth and consistent writing.",
                            ProductName = "Mechanical Pencil Set",
                            Status = 0,
                            UploadDate = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6770),
                            UserUploadId = new Guid("fda6e282-e429-4364-a445-136b570e2fde")
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("04d029b6-f569-4b01-845a-b90c42894f9a"),
                            Caption = "Image for Spiral Notebook",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6673),
                            FileSize = 1024L,
                            ImagePath = "https://png.pngtree.com/element_origin_min_pic/16/09/23/1857e50467c5629.jpg",
                            ProductId = new Guid("b1c34b49-2040-4fbc-b4ee-a6030b8e00f3")
                        },
                        new
                        {
                            Id = new Guid("da287161-4685-4b75-ad8a-5319a0804857"),
                            Caption = "Image for Mechanical Pencil Set",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6682),
                            FileSize = 2048L,
                            ImagePath = "https://img.lovepik.com/element/40145/4924.png_860.png",
                            ProductId = new Guid("0e18960a-1a99-4d16-8c78-830223a57946")
                        },
                        new
                        {
                            Id = new Guid("90aab4c2-b489-4e4d-9bb5-bb58571a8923"),
                            Caption = "Image for Assorted Sticky Notes",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6685),
                            FileSize = 3072L,
                            ImagePath = "https://img.lovepik.com/element/40154/8917.png_300.png",
                            ProductId = new Guid("7e8331d5-2ad5-45bf-96c0-fa8b3524560e")
                        },
                        new
                        {
                            Id = new Guid("72bad161-c5f0-4d20-94ee-2abf37fd6056"),
                            Caption = "Image for Physics for Beginners",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6690),
                            FileSize = 4096L,
                            ImagePath = "https://img.lovepik.com/element/40148/8397.png_300.png",
                            ProductId = new Guid("7527f9de-ed04-427b-b0a7-ca0c1ab87f27")
                        },
                        new
                        {
                            Id = new Guid("65155024-393b-4d81-a604-b5b4c79d3a23"),
                            Caption = "Image for Laboratory Measuring Cylinder",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6694),
                            FileSize = 5120L,
                            ImagePath = "https://img.lovepik.com/original_origin_pic/18/08/09/ad4800dc49f64e450ae5f7d2c15bbd69.png_wh300.png",
                            ProductId = new Guid("340dc0a5-3a7d-4cdc-bfad-320401dd65ed")
                        },
                        new
                        {
                            Id = new Guid("e2dbfd91-7fb5-4a70-ad0e-7e5a725ea0a9"),
                            Caption = "Image for Premium Ink Refills",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6697),
                            FileSize = 6144L,
                            ImagePath = "https://img.lovepik.com/png/20231021/School-office-supplies-binding-machine-stapler-book-stationery_289576_wh300.png",
                            ProductId = new Guid("83025556-ac61-447f-8e4a-f30e80a288b0")
                        },
                        new
                        {
                            Id = new Guid("0f4ba951-97c2-4824-bb4b-c6c04f3b139c"),
                            Caption = "Image for Digital Thermometer",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6700),
                            FileSize = 7168L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-cute.jpg",
                            ProductId = new Guid("63827fb5-e13f-4386-a254-c540f8261337")
                        },
                        new
                        {
                            Id = new Guid("25dbd596-4a3f-4041-bf48-85ef27994749"),
                            Caption = "Image for Microscope with LED Illumination",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6704),
                            FileSize = 8192L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-de-thuong.jpg",
                            ProductId = new Guid("76f13dae-939e-44c5-91f6-fce97dd22f9e")
                        },
                        new
                        {
                            Id = new Guid("359662e5-cdbd-409b-acd1-66ac3d188284"),
                            Caption = "Image for Physics for Beginners",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6707),
                            FileSize = 9216L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQClbO9Pb9b1e1cm18mublklMG69UYXdPgGgbeNGPutxgObEWNt0gMTNXmOHZInEp8O1ro&usqp=CAU",
                            ProductId = new Guid("ff25d9a1-6694-4215-9ae7-6ae6695650ae")
                        },
                        new
                        {
                            Id = new Guid("f399f94c-d94e-4851-bd48-23ece9d58bd9"),
                            Caption = "Image for Biology: Principles and Explorations",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6710),
                            FileSize = 10240L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRxXUh1O9kqmHicXzEZYoksQl0zKVwNW3KRoI2N39oO3Yyw33D03xmltVXOqTtbTa3gAfU&usqp=CAU",
                            ProductId = new Guid("285549ee-a02c-468f-87f8-941ddeed3386")
                        },
                        new
                        {
                            Id = new Guid("9771e0a8-7cdc-416d-b436-28cfbb85631b"),
                            Caption = "Image for Coloring Pencil Pack",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6712),
                            FileSize = 11264L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSjY5xXwr880MJU4ZMkHoS4Kk9uBvJlVOocsyyr8c-SZIhpInnWpbdrTbxLSwIGRTqLtQE&usqp=CAU",
                            ProductId = new Guid("84a19fb2-7912-41f4-b646-fb23b717d7b5")
                        },
                        new
                        {
                            Id = new Guid("9d7da31b-9313-470e-90de-7f4e080d095d"),
                            Caption = "Image for Elegant Fountain Pen",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6716),
                            FileSize = 12288L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRTzAg7kp7XyYhhU7MlQDH_Or2jTxIPZuyl3j_hA01ywVLBmo5qSkIeTbDE4C7DaKdDlyI&usqp=CAU",
                            ProductId = new Guid("ed017538-cd55-419d-8661-c6996767386f")
                        },
                        new
                        {
                            Id = new Guid("fa173d77-fa12-4408-85e7-56f271d3ff46"),
                            Caption = "Image for Premium Ink Refills",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6718),
                            FileSize = 13312L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSo-afGGvOl-uAIciO_inSUbq8c2WrvHEA8zA&s",
                            ProductId = new Guid("1dd24a05-a6d5-471f-9cdf-cd83203a87e8")
                        },
                        new
                        {
                            Id = new Guid("fd6bc68a-d66b-4594-8b04-81a29f95862b"),
                            Caption = "Image for Elegant Fountain Pen",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6720),
                            FileSize = 14336L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNhUHteq_2myNyWXDG0-tdUmElcHC5ZufUbA&s",
                            ProductId = new Guid("f8837775-a83c-4dc5-9dee-5eabdced85f5")
                        },
                        new
                        {
                            Id = new Guid("e9f30e3e-b7ff-4d44-bc08-afc11d7457b4"),
                            Caption = "Image for Microscope with LED Illumination",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6738),
                            FileSize = 15360L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEabvTjiSCtzyqA2S0JmFbTYH53qBm-WjioQ&s",
                            ProductId = new Guid("32cfa938-c0ed-4c83-9425-d621c36f2d5c")
                        },
                        new
                        {
                            Id = new Guid("73db5777-91a6-4404-b8e4-9c22cd591c00"),
                            Caption = "Image for History of Ancient Civilizations",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6742),
                            FileSize = 16384L,
                            ImagePath = "https://png.pngtree.com/png-vector/20190130/ourlarge/pngtree-simple-and-cute-school-supplies-stationery-suppliesstationerystaplerpenpencil-casecorrection-fluidrubber-png-image_674963.jpg",
                            ProductId = new Guid("b2b06fa5-9926-4e89-a6d3-1f7732a9ecb1")
                        },
                        new
                        {
                            Id = new Guid("6eb5e0b0-9003-4dcb-a6ba-1b591648a6e1"),
                            Caption = "Image for Premium Ink Refills",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6745),
                            FileSize = 17408L,
                            ImagePath = "https://png.pngtree.com/element_origin_min_pic/16/09/23/1857e50467c5629.jpg",
                            ProductId = new Guid("c3c59e74-e2b8-4758-a373-42277552d373")
                        },
                        new
                        {
                            Id = new Guid("76195e36-7bf5-4427-933d-269f2e1b2dae"),
                            Caption = "Image for Introduction to Algebra",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6748),
                            FileSize = 18432L,
                            ImagePath = "https://img.lovepik.com/element/40145/4924.png_860.png",
                            ProductId = new Guid("45bcfb67-2869-411d-be9a-f649afa44482")
                        },
                        new
                        {
                            Id = new Guid("2fd407a7-2d7d-4fa4-a4c8-a29393fe0a8b"),
                            Caption = "Image for Spiral Notebook",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6750),
                            FileSize = 19456L,
                            ImagePath = "https://img.lovepik.com/element/40154/8917.png_300.png",
                            ProductId = new Guid("c5d6a1fd-2414-42b6-9b70-5e1cd3f03e39")
                        },
                        new
                        {
                            Id = new Guid("0265c12f-1b62-4b58-8d42-aa88beeefa81"),
                            Caption = "Image for Microscope with LED Illumination",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6754),
                            FileSize = 20480L,
                            ImagePath = "https://img.lovepik.com/element/40148/8397.png_300.png",
                            ProductId = new Guid("e666c628-e973-4fcc-a297-f978832ed133")
                        },
                        new
                        {
                            Id = new Guid("e8c14d25-a3e9-43ba-99d1-889cbddcbd07"),
                            Caption = "Image for Coloring Pencil Pack",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6757),
                            FileSize = 21504L,
                            ImagePath = "https://img.lovepik.com/original_origin_pic/18/08/09/ad4800dc49f64e450ae5f7d2c15bbd69.png_wh300.png",
                            ProductId = new Guid("01aad690-b271-486c-aae2-42993aeb18b9")
                        },
                        new
                        {
                            Id = new Guid("471ceeab-6fd0-44a3-b323-e3a3522faa6d"),
                            Caption = "Image for Premium Ink Refills",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6758),
                            FileSize = 22528L,
                            ImagePath = "https://img.lovepik.com/png/20231021/School-office-supplies-binding-machine-stapler-book-stationery_289576_wh300.png",
                            ProductId = new Guid("35bb966d-c405-44f8-9831-c0b4c7e20c3e")
                        },
                        new
                        {
                            Id = new Guid("6fc8fc89-ba98-43a9-b962-7f2c1e16865e"),
                            Caption = "Image for Student Backpack",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6764),
                            FileSize = 23552L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-cute.jpg",
                            ProductId = new Guid("ddd095c3-e3c6-43ca-bdac-48ad0c615576")
                        },
                        new
                        {
                            Id = new Guid("166823dc-ae77-43b0-84ad-d24de9429abc"),
                            Caption = "Image for Physics for Beginners",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6769),
                            FileSize = 24576L,
                            ImagePath = "https://tomau.vn/wp-content/uploads/tranh-to-mau-do-dung-hoc-tap-de-thuong.jpg",
                            ProductId = new Guid("fd55975f-e3e1-41e9-9629-9a4f2086d065")
                        },
                        new
                        {
                            Id = new Guid("343b0ad9-70ac-49c7-a1c6-1dbf325e6456"),
                            Caption = "Image for Mechanical Pencil Set",
                            DateCreated = new DateTime(2024, 7, 31, 18, 31, 18, 69, DateTimeKind.Utc).AddTicks(6771),
                            FileSize = 25600L,
                            ImagePath = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQClbO9Pb9b1e1cm18mublklMG69UYXdPgGgbeNGPutxgObEWNt0gMTNXmOHZInEp8O1ro&usqp=CAU",
                            ProductId = new Guid("7e6a2bdc-d4f8-4703-8d49-aa52b8244269")
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Rating", b =>
                {
                    b.Property<Guid>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NumberStars")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RatingId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Report", b =>
                {
                    b.Property<Guid>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReportId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("e398cee3-6381-4a52-aaf5-20a2e9b54810"),
                            RoleName = "Administrator"
                        },
                        new
                        {
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            RoleName = "Moderator"
                        },
                        new
                        {
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Transaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExchangeRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TransactionId");

                    b.HasIndex("ExchangeRequestId")
                        .IsUnique();

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("EmailConfirm")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("0af02748-9d43-4110-81e5-93d9ece8cfda"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "minhkhoa@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Minh",
                            IsActive = false,
                            LastName = "Khoa",
                            Password = "$2a$11$XExaEJxD4misG.2WIL7VtuwOacqjJsio2SX4oK98FMXG9dvm3u7ia",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("e398cee3-6381-4a52-aaf5-20a2e9b54810"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "admin"
                        },
                        new
                        {
                            UserId = new Guid("b6b6e80f-cc04-43e3-800f-a3c89b3ba017"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phamthanh@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Pham",
                            IsActive = false,
                            LastName = "Thanh",
                            Password = "$2a$11$Upaq5cTmycAJKkdk.2CFuu46Dt.COtBn0uqQuv0e10alqIXRfipp6",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "moderator"
                        },
                        new
                        {
                            UserId = new Guid("82c47d9c-b386-4050-a42c-95a220639c54"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phuongthao@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Phuong",
                            IsActive = false,
                            LastName = "Thao",
                            Password = "$2a$11$PGu3ZcH/NrlTILNH56zd4O0G8RaODo1tXLHUocUoaA5PYcexBJHfa",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "phuongthao"
                        },
                        new
                        {
                            UserId = new Guid("fda6e282-e429-4364-a445-136b570e2fde"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quoctrieu@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Quoc",
                            IsActive = false,
                            LastName = "Trieu",
                            Password = "$2a$11$VrgO4TVhne0JKdG73mLzce6Ute.1iDl3Q0NKV5YXHhgXv9/IEFBlq",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "quoctrieu"
                        },
                        new
                        {
                            UserId = new Guid("d6446689-2743-460b-82c3-d25b21f87b13"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "haugiang@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Hau",
                            IsActive = false,
                            LastName = "Giang",
                            Password = "$2a$11$dFB6HNKrVgIitxwQxegvaeTeI4Ixlf827D453dfvwBnE3ICdWWlDW",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "haugiang"
                        },
                        new
                        {
                            UserId = new Guid("4c99eef2-baca-4394-8d45-47e5f805e0f0"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "minhphuoc@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Minh",
                            IsActive = false,
                            LastName = "Phuoc",
                            Password = "$2a$11$I0/VjOAlE6as5gm5GiK5wenwR9Qt/x/uj2ggqQfr58T8vZlztRBGG",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "minhphuoc"
                        },
                        new
                        {
                            UserId = new Guid("8130b91b-2e32-4aad-8479-3e01dd8813e3"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "haugiang01@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Hậu",
                            IsActive = false,
                            LastName = "Giang",
                            Password = "$2a$11$7enLGkIVuejT8t6LgBFCceMATUm9AzsrEwB1BU8sX/B8YiExeLCbW",
                            PhoneNumber = "0123456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "haugiang45"
                        },
                        new
                        {
                            UserId = new Guid("273c8fa3-b3f4-4c6d-87da-07bc63a4c436"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1995, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "minhtran@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Minh",
                            IsActive = false,
                            LastName = "Trần",
                            Password = "$2a$11$ufZSAr1x8TFGYv1aKzG76eiwBFtaaPkMbsljeDlA8V0kOtWCW3Ehm",
                            PhoneNumber = "0987654321",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "minhtran"
                        },
                        new
                        {
                            UserId = new Guid("09481859-e811-4584-b2dd-0a74c8adfaaf"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2000, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thaonguyen@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Thảo",
                            IsActive = false,
                            LastName = "Nguyễn",
                            Password = "$2a$11$DURfilXfa6lkUl118rhD4.P0U0UBg19XD.oS3HuLdDRX50Q1ci9Ta",
                            PhoneNumber = "0912345678",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "thaonguyen"
                        },
                        new
                        {
                            UserId = new Guid("15b2d60f-bdfc-4ce1-8b03-f8b8c3d7480d"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1998, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anhpham@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Anh",
                            IsActive = false,
                            LastName = "Phạm",
                            Password = "$2a$11$3Ingj5v6rzRhmOvwmwFZouGlFqykSWhfXmtAEkaie79e8L0kgPQBC",
                            PhoneNumber = "0908765432",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "anhpham"
                        },
                        new
                        {
                            UserId = new Guid("d3bbeb03-d683-47cc-9ef0-0a2b36c2788a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1996, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "namle@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Nam",
                            IsActive = false,
                            LastName = "Lê",
                            Password = "$2a$11$zD.wCseyt6QmnN4uRGiyiOPaOZ0JQZaqPCslpK.G6Ag/fbhpKZN0O",
                            PhoneNumber = "0901234567",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "namle"
                        },
                        new
                        {
                            UserId = new Guid("ce914c08-8b01-483a-8b16-1c0e27284cc8"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1999, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lanhoang@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Lan",
                            IsActive = false,
                            LastName = "Hoàng",
                            Password = "$2a$11$m5LGI2jnmIeyu6L9vQaI1e/YL/i73hYcWWd.8bNf77zkmjB.Zzq2i",
                            PhoneNumber = "0934567890",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "lanhoang"
                        },
                        new
                        {
                            UserId = new Guid("bf0b0b85-e98e-4da7-af44-b7198685cb78"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tudo@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Tú",
                            IsActive = false,
                            LastName = "Đỗ",
                            Password = "$2a$11$xQIBKi9fOMACCfFzvhkIhu8kq8iNx8ipPMbW3OofXlO1ulAI4cLLS",
                            PhoneNumber = "0981234567",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "tudo"
                        },
                        new
                        {
                            UserId = new Guid("fefd096b-eb6f-4843-a9fb-fdde2f08e960"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2001, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quynhphan@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Quỳnh",
                            IsActive = false,
                            LastName = "Phan",
                            Password = "$2a$11$C7ha6RvWDGzd//6Y02/gCeUJVcFoEwFHSQTidAK4qceN9ZNsx60pW",
                            PhoneNumber = "0908761234",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "quynhphan"
                        },
                        new
                        {
                            UserId = new Guid("97108917-856a-42af-937b-7b0e2e735b20"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1997, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "huongtrinh@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Hương",
                            IsActive = false,
                            LastName = "Trịnh",
                            Password = "$2a$11$J0Jh2mINub2LxdTKsRsV9.QG/HcP37BWBfYnMavYP7pk/wQnPSeRe",
                            PhoneNumber = "0937894561",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "huongtrinh"
                        },
                        new
                        {
                            UserId = new Guid("0da4bfc5-3a37-4a66-91d5-fe9e1d086564"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khangvo@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Khang",
                            IsActive = false,
                            LastName = "Võ",
                            Password = "$2a$11$GJmf1FIoVBld1pm0yYZN4.FSrmC9Fk46kjY4xklZdWQDrUySDHHIC",
                            PhoneNumber = "0923456789",
                            RoleId = new Guid("d81f428f-9572-47f1-a980-69de7a1e348b"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "khangvo"
                        },
                        new
                        {
                            UserId = new Guid("f58236aa-5912-489a-8ffb-001d61e611c8"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nguyenvana@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Nguyen",
                            IsActive = false,
                            LastName = "Van A",
                            Password = "$2a$11$ekx3HoAu93fluPRwcdmdCuu38hnDOi9Vgo36nuLtYsVysIoNhyXa.",
                            PhoneNumber = "0902345678",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "nguyenvana"
                        },
                        new
                        {
                            UserId = new Guid("803b1549-478c-421b-bd4b-2b6111836609"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2001, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lethib@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Le",
                            IsActive = false,
                            LastName = "Thi B",
                            Password = "$2a$11$WKK0Bh82x6ytg5KNYfk.Tei/PyCtSCgxQUls1jC6Q4zrWoluKnqmS",
                            PhoneNumber = "0903456789",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "lethib"
                        },
                        new
                        {
                            UserId = new Guid("7c87c075-2c90-4c6e-8e8b-b903ec331072"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2000, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tranvanc@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Tran",
                            IsActive = false,
                            LastName = "Van C",
                            Password = "$2a$11$ns6ZH1TGeUSTpw8vDjes1uoSnpMIaxrh1ZU5E0FCF/fpSkxHapiVy",
                            PhoneNumber = "0904567890",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "tranvanc"
                        },
                        new
                        {
                            UserId = new Guid("f370712b-0452-479c-a0d4-b4d2a7ace38f"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phamthid@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Pham",
                            IsActive = false,
                            LastName = "Thi D",
                            Password = "$2a$11$2KbbxJeP1hLFrOAGm1DrfOgziV00N3ta0RiajqS4uG1zTA8xG0YCe",
                            PhoneNumber = "0905678901",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "phamthid"
                        },
                        new
                        {
                            UserId = new Guid("a6f939d3-eb8a-4884-8084-b1dc99559167"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dovane@gmail.com",
                            EmailConfirm = true,
                            FirstName = "Do",
                            IsActive = false,
                            LastName = "Van E",
                            Password = "$2a$11$VCtVaDPI6X6eqcQTupplX.b7vzOJkSkqZO46udaNyHvLolQHnTYxO",
                            PhoneNumber = "0906789012",
                            RoleId = new Guid("3d446530-061e-4a88-ae6c-1b6a6190a693"),
                            UserImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/Images%2F1b789a16-21bb-43b2-8b45-c7ab29a98fe2_user_avatar_def.jfif?alt=media&token=df7abe8e-a87a-4894-a6b3-8a5d2775d7e1",
                            UserName = "dovane"
                        });
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ExchangeRequest", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "CurrentProduct")
                        .WithMany("ExchangeRequestsSent")
                        .HasForeignKey("CurrentProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Receiver")
                        .WithMany("PreOrderToSellers")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Sender")
                        .WithMany("PreOrderToBuyers")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.Product", "TargetProduct")
                        .WithMany("ExchangeRequestsReceived")
                        .HasForeignKey("TargetProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CurrentProduct");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");

                    b.Navigation("TargetProduct");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Product", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "UserUpload")
                        .WithMany("Products")
                        .HasForeignKey("UserUploadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("UserUpload");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ProductImage", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Rating", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "Product")
                        .WithOne("Rate")
                        .HasForeignKey("GoodsExchange.Data.Models.Rating", "ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Receiver")
                        .WithMany("RatingsReceived")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Sender")
                        .WithMany("RatingsGiven")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Report", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Product", "Product")
                        .WithMany("Reports")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Receiver")
                        .WithMany("ReportsReceived")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GoodsExchange.Data.Models.User", "Sender")
                        .WithMany("ReportsMade")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Transaction", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.ExchangeRequest", "ExchangeRequest")
                        .WithOne("Transaction")
                        .HasForeignKey("GoodsExchange.Data.Models.Transaction", "ExchangeRequestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ExchangeRequest");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.User", b =>
                {
                    b.HasOne("GoodsExchange.Data.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.ExchangeRequest", b =>
                {
                    b.Navigation("Transaction")
                        .IsRequired();
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Product", b =>
                {
                    b.Navigation("ExchangeRequestsReceived");

                    b.Navigation("ExchangeRequestsSent");

                    b.Navigation("ProductImages");

                    b.Navigation("Rate")
                        .IsRequired();

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GoodsExchange.Data.Models.User", b =>
                {
                    b.Navigation("PreOrderToBuyers");

                    b.Navigation("PreOrderToSellers");

                    b.Navigation("Products");

                    b.Navigation("RatingsGiven");

                    b.Navigation("RatingsReceived");

                    b.Navigation("ReportsMade");

                    b.Navigation("ReportsReceived");
                });
#pragma warning restore 612, 618
        }
    }
}
